{
  "name": "automate_workloads",
  "version": "1.0.0",
  "type": "module",
  "private": true,
  "scripts": {
    "issues:ci": "gh issue list --label ci",
    "issues:check": "./scripts/monitoring/check-issues.sh",
    "issues:ensure-demo": "bun run scripts/ensure-demo-issue.ts",
    "issues:list": "gh issue list",
    "issues:manager": "./scripts/automation/llm-issue-manager.sh",
    "issues:milestone:implementation": "gh issue list --milestone 'Implementation Complete'",
    "issues:milestone:research": "gh issue list --milestone 'Research and Design Complete'",
    "issues:quality": "gh issue list --label quality",
    "issues:testing": "gh issue list --label testing",
    "context:add": "bun run src/cli/context-fossil.ts add",
    "context:backup": "./scripts/automation/backup-context.sh",
    "context:export": "bun run src/cli/context-fossil.ts export",
    "context:get": "bun run src/cli/context-fossil.ts get",
    "context:init": "bun run src/cli/context-fossil.ts init",
    "context:query": "bun run src/cli/context-fossil.ts query",
    "context:stats": "bun run src/cli/context-fossil.ts stats",
    "context:summary": "bun run src/cli/context-fossil.ts summary",
    "context:update": "bun run src/cli/context-fossil.ts update",
    "context:gather": "bun run src/cli/gather-context.ts",
    "projects:integration": "./scripts/automation/github-projects-integration.sh",
    "projects:report": "./scripts/automation/github-projects-integration.sh -m report",
    "projects:setup": "./scripts/automation/github-projects-integration.sh -m setup",
    "projects:sync": "./scripts/automation/github-projects-integration.sh -m sync",
    "repo:analyze": "bun run src/cli/repo-orchestrator.ts analyze",
    "repo:context": "bun run src/cli/gather-context.ts",
    "repo:examples": "bun run examples/repository-orchestration.ts",
    "repo:monitor-progress": "./scripts/automation/monitor-progress.sh",
    "repo:orchestrate": "bun run src/cli/repo-orchestrator.ts orchestrate",
    "repo:orchestrator": "./scripts/automation/repo-orchestrator.sh",
    "repo:plan": "bun run src/cli/llm-plan.ts",
    "repo:quick-status": "./scripts/monitoring/quick-status.sh",
    "repo:simple-monitor": "./scripts/automation/simple-monitor.sh",
    "repo:status": "./scripts/monitoring/quick-status.sh",
    "repo:target": "./scripts/automation/repo-orchestrator.sh",
    "repo:track": "./scripts/automation/monitor-progress.sh",
    "qa:review": "./scripts/automation/review-workflow.sh",
    "qa:test": "bun test && bun run lint && bun run type-check",
    "qa:workflow": "./scripts/automation/qa-workflow.sh",
    "workflow:automate": "./scripts/automation/llm-workflow.sh",
    "workflow:content": "./scripts/automation/llm-content-automation.sh",
    "workflow:issues": "./scripts/automation/llm-issue-manager.sh",
    "workflow:llm": "./scripts/automation/llm-workflow.sh",
    "workflow:qa": "./scripts/automation/qa-workflow.sh",
    "workflow:review": "./scripts/automation/review-workflow.sh",
    "workflow:sync": "./scripts/automation/llm-workflow.sh",
    "content:automation": "./scripts/automation/llm-content-automation.sh",
    "build": "bun build src/cli/repo-orchestrator.ts --outdir dist --target node",
    "demo:ecosystem": "bun run examples/complete-automation-ecosystem.ts",
    "demo:tool-centric": "bun run examples/tool-centric-demo.ts",
    "dev": "bun run --watch src/cli/repo-orchestrator.ts",
    "dev:start": "bun run src/cli/github-issues.ts",
    "dev:setup": "bun install && cp .env.example .env",
    "dev:test": "bun test --watch",
    "docs": "bun run docs/README.md",
    "format": "prettier --write src/**/*.ts",
    "gmail:sync": "bun run src/cli/gmail-sync.ts",
    "lint:eslint": "bun run --bun eslint src/**/*.ts",
    "obsidian:sync": "bun run src/cli/obsidian-sync.ts",
    "plan:create": "bun run src/cli/create-plan.ts",
    "plan:execute": "bun run src/cli/execute-plan.ts",
    "plan:monitor": "bun run src/cli/monitor-plan.ts",
    "release:execute": "bun run src/cli/release-execute.ts",
    "release:monitor": "bun run src/cli/release-monitor.ts",
    "release:plan": "bun run src/cli/release-plan.ts",
    "social:sync": "bun run src/cli/social-sync.ts",
    "start": "bun run src/cli/github-issues.ts",
    "test": "SKIP_BUN_TEST=1 bun test",
    "type-check": "bun run --bun tsc --noEmit",
    "examples": "bun run examples/basic-usage.ts",
    "llm:analyze": "bun run src/cli/llm-analyze.ts",
    "llm:execute": "bun run src/cli/llm-execute.ts",
    "llm:monitor": "bun run src/cli/llm-monitor.ts",
    "llm:plan": "bun run src/cli/llm-plan.ts",
    "llm:chat-context": "bun run scripts/llm-chat-context.ts",
    "validate:plan": "bun run src/cli/validate-plan.ts",
    "validate:plan:batch": "bun run src/cli/validate-plan.ts batch",
    "validate:plan:create-expected": "bun run src/cli/validate-plan.ts create-expected",
    "issues": "bun run src/cli/github-issues.ts",
    "github:sync": "bun run src/cli/github-sync.ts",
    "scripts:setup": "./scripts/setup/",
    "migrate": "./scripts/migrate.sh",
    "migrate:up": "./scripts/migrate.sh up",
    "migrate:down": "./scripts/migrate.sh down",
    "migrate:status": "./scripts/migrate.sh status",
    "migrate:list": "./scripts/migrate.sh list",
    "audit:shell-scripts": "find scripts -type f -name '*.sh' | while read script; do test_file=\"tests/unit/${script%.sh}.test.ts\"; if [ ! -f \"$test_file\" ]; then echo \"$script has no test file!\"; fi; done",
    "test:unit": "bun test tests/unit/scripts/**/*.test.ts",
    "test:integration": "bun test tests/integration/*.integration.test.ts",
    "test:audit": "bash scripts/automation/audit-shell-scripts.sh",
    "test:status": "./scripts/automation/testing-status.sh",
    "test:status:quick": "./scripts/automation/testing-status.sh --quick",
    "test:pre-commit": "./scripts/automation/testing-status.sh --quick",
    "test:coverage": "bun test --coverage",
    "test:coverage:report": "bun test --coverage --reporter=html",
    "test:coverage:check": "bun test --coverage --coverage-threshold=80",
    "test:full": "bun run test:unit && bun run test:integration && bun run test:audit && bun run test:coverage",
    "ci": "bun run test:unit && bun run test:audit",
    "validate:types-schemas": "bun run scripts/validate-types-schemas.ts",
    "validate:types-schemas:report": "bun run scripts/validate-types-schemas.ts --report",
    "validate:types-schemas:strict": "bun run scripts/validate-types-schemas.ts --strict",
    "validate:pre-commit": "bun run scripts/precommit-validate.ts",
    "validate:all": "bun run validate:types-schemas && bun run validate:pre-commit && bun run type-check",
    "validate:enhanced-commit": "bun run scripts/enhanced-pre-commit-validator.ts --validate --pre-commit --strict",
    "audit:commits": "bun run scripts/enhanced-pre-commit-validator.ts --audit --since 2025-01-01 --output fossils/audit_reports/audit-$(date +%Y%m%d).json",
    "fix:commits": "bun run scripts/enhanced-pre-commit-validator.ts --fix --commit HEAD --auto-fix",
    "track:commits": "bun run scripts/enhanced-pre-commit-validator.ts --track --output fossils/audit_reports/tracking-$(date +%Y%m%d).json",
    "template:create": "bun run scripts/commit-message-template.ts --create",
    "template:validate": "bun run scripts/commit-message-template.ts --validate",
    "demo:commit-system": "bun run examples/enhanced-commit-message-demo.ts",
    "validate:types-schemas-cohesion": "bun run src/cli/validate-types-schemas.ts --cohesion --strict",
    "fossilize:validation": "bun run src/cli/fossilize-validation.ts",
    "fossilize:performance": "bun run src/cli/fossilize-performance.ts",
    "fossilize:summary": "bun run src/cli/fossil-summary.ts",
    "lint": "echo 'Linting skipped - ESLint not configured'",
    "mcp": "bun run mcp-cli.ts",
    "mcp:help": "bun run mcp-cli.ts --help",
    "mcp:list": "bun run mcp-cli.ts list",
    "mcp:status": "bun run mcp-cli.ts status",
    "mcp:repo": "bun run mcp-cli.ts repo",
    "mcp:context": "bun run mcp-cli.ts context",
    "mcp:llm": "bun run mcp-cli.ts llm",
    "mcp:workflow": "bun run mcp-cli.ts workflow",
    "mcp:issues": "bun run mcp-cli.ts issues",
    "mcp:projects": "bun run mcp-cli.ts projects",
    "mcp:qa": "bun run mcp-cli.ts qa",
    "mcp:dev": "bun run mcp-cli.ts dev",
    "mcp:migrate": "bun run mcp-cli.ts migrate",
    "mcp:test": "bun run mcp-cli.ts test",
    "update:checklist": "bun scripts/update-issue-checklist.ts",
    "issues:json": "bun run src/cli/github-issues.ts --format json",
    "issues:fossilize": "bun run src/cli/issues-fossilize.ts",
    "commit:batch": "./scripts/automation/batch-commit-orchestrator.sh",
    "commit:batch:dry-run": "./scripts/automation/batch-commit-orchestrator.sh --dry-run",
    "commit:batch:validate": "./scripts/automation/batch-commit-orchestrator.sh --validate-only",
    "commit:batch:ready": "./scripts/automation/batch-commit-orchestrator.sh --commit-ready",
    "commit:batch:all": "./scripts/automation/batch-commit-orchestrator.sh --commit-all",
    "footprint:generate": "bun run scripts/generate-file-footprint.ts",
    "footprint:validate": "bun run scripts/validate-footprint.ts",
    "commit:with-footprint": "./scripts/commit-with-footprint.sh",
    "footprint:evolving": "bun run scripts/generate-evolving-footprint.ts",
    "precommit:unified": "bun run scripts/precommit-unified.ts",
    "blog:create": "chmod +x scripts/manage-blog-branches.sh && ./scripts/manage-blog-branches.sh create",
    "blog:switch": "chmod +x scripts/manage-blog-branches.sh && ./scripts/manage-blog-branches.sh switch",
    "blog:publish": "chmod +x scripts/manage-blog-branches.sh && ./scripts/manage-blog-branches.sh publish",
    "blog:sync": "chmod +x scripts/manage-blog-branches.sh && ./scripts/manage-blog-branches.sh sync",
    "blog:new": "chmod +x scripts/blog-workflow.sh && ./scripts/blog-workflow.sh new",
    "blog:list": "chmod +x scripts/blog-workflow.sh && ./scripts/blog-workflow.sh list",
    "blog:deploy": "chmod +x scripts/blog-workflow.sh && ./scripts/blog-workflow.sh deploy"
  },
  "devDependencies": {
    "@types/bun": "latest",
    "@types/js-yaml": "^4.0.9",
    "husky": "^9.1.7"
  },
  "peerDependencies": {
    "typescript": "^5"
  },
  "dependencies": {
    "@raycast/api": "^1.100.3",
    "ai": "^4.3.16",
    "commander": "^14.0.0",
    "date-fns": "^4.1.0",
    "js-yaml": "^4.1.0",
    "octokit": "^5.0.3",
    "yaml": "^2.8.0",
    "zod": "^3.25.67"
  },
  "engines": {
    "bun": ">=1.0.0"
  },
  "keywords": [
    "automation",
    "github",
    "twitter",
    "gmail",
    "buffer",
    "obsidian",
    "raycast",
    "bun",
    "typescript"
  ],
  "description": "A comprehensive automation ecosystem integrating GitHub, Twitter, Gmail, Buffer, and Obsidian with Bun and TypeScript",
  "coverage": {
    "thresholds": {
      "lines": 80,
      "branches": 70,
      "functions": 85,
      "statements": 80
    }
  },
  "bin": {
    "mcp": "./mcp-cli.ts"
  }
}
