project_status:
  type: project_status
  source: update-project_status
  createdBy: llm+human
  createdAt: '2025-07-06T11:21:37.481Z'
  canonical: true
  repo: automate_workloads
  modules:
    cli:
      path: src/cli
      files:
        - vscode-ai.ts:
            functions: []
            fossilized_output: false
            cli_commands:
              - 'test: implemented'
              - 'call: implemented'
              - 'process-snapshot: implemented'
              - 'list-fossils: implemented'
              - 'show-fossil: implemented'
              - 'analyze: implemented'
              - 'config: implemented'
            cli_details:
              - name: test
                options: &ref_0
                  - '--provider <provider>'
                  - '--timeout <timeout>'
                  - '--message <message>'
                  - '--provider <provider>'
                  - '--context <context>'
                  - '--purpose <purpose>'
                  - '--use-chat'
                  - '--use-command-palette'
                  - '--timeout <timeout>'
                  - '--fossilize'
                  - '--analysis-type <type>'
                  - '--provider <provider>'
                  - '--context <context>'
                  - '--purpose <purpose>'
                  - '--timeout <timeout>'
                  - '--fossilize'
                  - '--output <path>'
                  - '--limit <limit>'
                  - '--provider <provider>'
                  - '--type <type>'
                  - '--since <date>'
                  - '--output <format>'
                  - '--output <format>'
                  - '--since <date>'
                  - '--provider <provider>'
                  - '--output <format>'
                  - '--show'
                  - '--provider <provider>'
                  - '--timeout <timeout>'
                  - '--fossil-path <path>'
                  - '--enable-fossilization'
                  - '--disable-fossilization'
                required: &ref_1
                  - '--snapshot <path>'
                  - '--id <id>'
              - name: call
                options: *ref_0
                required: *ref_1
              - name: process-snapshot
                options: *ref_0
                required: *ref_1
              - name: list-fossils
                options: *ref_0
                required: *ref_1
              - name: show-fossil
                options: *ref_0
                required: *ref_1
              - name: analyze
                options: *ref_0
                required: *ref_1
              - name: config
                options: *ref_0
                required: *ref_1
        - update-checklist.ts:
            functions: []
            fossilized_output: false
            cli_commands:
              - 'file: implemented'
              - 'batch: implemented'
              - 'roadmap: implemented'
            cli_details:
              - name: file
                options: &ref_2
                  - '-u, --updates <updates>'
                  - '-f, --updates-file <file>'
                  - '--dry-run'
                  - '--no-backup'
                  - '-c, --config <file>'
                  - '-u, --updates <updates>'
                  - '--dry-run'
                  - '--report <file>'
                  - '-t, --task <task>'
                  - '-s, --status <status>'
                  - '-c, --comment <comment>'
                  - '--dry-run'
                required: &ref_3 []
              - name: batch
                options: *ref_2
                required: *ref_3
              - name: roadmap
                options: *ref_2
                required: *ref_3
            tests: &ref_28
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/scripts.e2e.test.ts
        - llm-snapshot.ts:
            functions: []
            fossilized_output: false
            cli_commands:
              - 'export: implemented'
              - 'chat: implemented'
              - 'docs: implemented'
              - 'list: implemented'
            cli_details:
              - name: export
                options: &ref_4
                  - '-f, --format <format>'
                  - '-o, --output <path>'
                  - '--include-metadata'
                  - '--include-timestamps'
                  - '--include-validation'
                  - '--include-preprocessing'
                  - '--include-quality-metrics'
                  - '--date-start <date>'
                  - '--date-end <date>'
                  - '--model <model>'
                  - '--purpose <purpose>'
                  - '--status <status>'
                  - '--tags <tags>'
                  - '--date-start <date>'
                  - '--date-end <date>'
                  - '--model <model>'
                  - '--purpose <purpose>'
                  - '--tags <tags>'
                  - '-o, --output <path>'
                  - '--date-start <date>'
                  - '--date-end <date>'
                  - '--model <model>'
                  - '--purpose <purpose>'
                  - '--tags <tags>'
                  - '--limit <number>'
                  - '--date-start <date>'
                  - '--date-end <date>'
                  - '--model <model>'
                  - '--purpose <purpose>'
                  - '--tags <tags>'
                required: &ref_5 []
              - name: chat
                options: *ref_4
                required: *ref_5
              - name: docs
                options: *ref_4
                required: *ref_5
              - name: list
                options: *ref_4
                required: *ref_5
            tests: &ref_29
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/repo-orchestrator-fossilization.integration.test.ts
        - create-fossil-issue.ts:
            functions: []
            fossilized_output: false
            cli_details: []
        - curate-fossil.ts:
            functions: []
            fossilized_output: false
            cli_details: []
            tests: &ref_30
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/examples.e2e.test.ts
        - fossilize-validation.ts:
            functions:
              - 'fossilizeValidation: implemented'
            fossilized_output: false
            cli_details: []
        - llm-execute.ts:
            functions: []
            fossilized_output: false
            cli_details: []
        - track-progress.ts:
            functions:
              - 'ProgressTrackingService: implemented'
            fossilized_output: false
            cli_commands:
              - 'track: implemented'
              - 'status: implemented'
            cli_details:
              - name: track
                options: &ref_6
                  - '-m, --mode <mode>'
                  - '-r, --report-type <type>'
                  - '-o, --output-dir <dir>'
                  - '--no-trends'
                  - '--no-trigger'
                  - '--output <file>'
                required: &ref_7 []
              - name: status
                options: *ref_6
                required: *ref_7
        - timestamp-filter.ts:
            functions:
              - 'main: implemented'
            fossilized_output: false
            cli_details: []
        - fossil-summary.ts:
            functions:
              - 'updateFossilSummary: implemented'
            fossilized_output: false
            cli_details: []
            tests: &ref_31
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/scripts.e2e.test.ts
        - issues-create.ts:
            functions:
              - 'runIssuesCreate: implemented'
            fossilized_output: false
            cli_details: []
            tests: &ref_32
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/cli/issues-create.test.ts
        - github-issues.ts:
            functions:
              - 'detectOwnerRepo: implemented'
              - 'showHelp: implemented'
              - 'main: implemented'
            fossilized_output: false
            cli_details: []
            tests: &ref_33
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-issues.integration.test.ts
        - git-history-insights.ts:
            functions:
              - 'GitHistoryInsightsCLI: implemented'
            fossilized_output: false
            cli_details: []
        - issues-fossilize.ts:
            functions:
              - 'main: implemented'
            fossilized_output: false
            cli_details: []
        - githubFossilSyncCore.ts:
            functions:
              - 'githubFossilSync: implemented'
            fossilized_output: false
            cli_details: []
        - context-fossil.ts:
            functions:
              - 'ContextFossilService: implemented'
            fossilized_output: false
            cli_commands:
              - 'init: implemented'
              - 'add: implemented'
              - 'query: implemented'
              - 'get: implemented'
              - 'update: implemented'
              - 'export: implemented'
              - 'stats: implemented'
              - 'summary: implemented'
              - 'cleanup: implemented'
              - 'enhance: implemented'
              - 'list: implemented'
            cli_details:
              - name: init
                options: &ref_8
                  - '--tags <tags>'
                  - '--source <source>'
                  - '--parent-id <id>'
                  - '--metadata <metadata>'
                  - '-t, --type <type>'
                  - '--tags <tags>'
                  - '--source <source>'
                  - '--search <search>'
                  - '--limit <number>'
                  - '--offset <number>'
                  - '--format <format>'
                  - '--title <title>'
                  - '--content <content>'
                  - '--tags <tags>'
                  - '--output <file>'
                  - '--type <type>'
                  - '--tags <tags>'
                  - '--type <type>'
                  - '--tags <tags>'
                  - '--limit <number>'
                  - '--dry-run'
                  - '--backup'
                  - '--similarity-threshold <number>'
                  - '--report-file <file>'
                  - '--dry-run'
                  - '--entry-id <id>'
                  - '--all'
                  - '--type <type>'
                  - '--tags <tags>'
                  - '--json'
                required: &ref_9
                  - '-t, --type <type>'
                  - '--title <title>'
                  - '--content <content>'
                  - '-f, --format <format>'
              - name: add
                options: *ref_8
                required: *ref_9
              - name: query
                options: *ref_8
                required: *ref_9
              - name: get
                options: *ref_8
                required: *ref_9
              - name: update
                options: *ref_8
                required: *ref_9
              - name: export
                options: *ref_8
                required: *ref_9
              - name: stats
                options: *ref_8
                required: *ref_9
              - name: summary
                options: *ref_8
                required: *ref_9
              - name: cleanup
                options: *ref_8
                required: *ref_9
              - name: enhance
                options: *ref_8
                required: *ref_9
              - name: list
                options: *ref_8
                required: *ref_9
            tests: &ref_34
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/cli/issues-create.test.ts
        - llm-plan.ts:
            functions:
              - 'LLMPlanningService: implemented'
              - 'findShellScripts: implemented'
              - 'for: implemented'
            fossilized_output: false
            cli_commands:
              - 'decompose: implemented'
              - 'prioritize: implemented'
              - 'generate-content: implemented'
              - 'generate-tests: implemented'
              - 'review-comments: implemented'
            cli_details:
              - name: decompose
                options: &ref_10
                  - '--quiet'
                  - '--json'
                  - '-c, --context <context>'
                  - '-o, --output <file>'
                  - '--model <model>'
                  - '--api-key <apiKey>'
                  - '--issue-mode'
                  - '-c, --context <context>'
                  - '--model <model>'
                  - '--api-key <apiKey>'
                  - '-o, --output <file>'
                  - '--model <model>'
                  - '--api-key <apiKey>'
                  - '-o, --output <file>'
                  - '--model <model>'
                  - '--api-key <apiKey>'
                required: &ref_11 []
              - name: prioritize
                options: *ref_10
                required: *ref_11
              - name: generate-content
                options: *ref_10
                required: *ref_11
              - name: generate-tests
                options: *ref_10
                required: *ref_11
              - name: review-comments
                options: *ref_10
                required: *ref_11
            tests: &ref_35
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/cli/llm-plan.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-plan.test.ts
        - llm-usage.ts:
            functions:
              - 'monitorUsage: implemented'
            fossilized_output: false
            cli_commands:
              - 'report: implemented'
              - 'config: implemented'
              - 'analyze-waste: implemented'
              - 'test-local: implemented'
              - 'clean: implemented'
              - 'export: implemented'
              - 'setup-monitoring: implemented'
              - 'analyze-patterns: implemented'
            cli_details:
              - name: report
                options: &ref_12
                  - '--local-backend <name>'
                  - '--prefer-local'
                  - '--prefer-cloud'
                  - '--auto'
                  - '-f, --format <format>'
                  - '-d, --days <days>'
                  - '-p, --purpose <purpose>'
                  - '-r, --provider <provider>'
                  - '--max-tokens <tokens>'
                  - '--max-cost <cost>'
                  - '--min-value-score <score>'
                  - '--enable-local-llm'
                  - '--enable-caching'
                  - '--cache-expiry <hours>'
                  - '--retry-attempts <attempts>'
                  - '--retry-delay <ms>'
                  - '--rate-limit-delay <ms>'
                  - '--show'
                  - '--min-cost <cost>'
                  - '--max-value-score <score>'
                  - '--days <days>'
                  - '--model <model>'
                  - '--days <days>'
                  - '--dry-run'
                  - '-f, --format <format>'
                  - '-o, --output <file>'
                  - '--cron <schedule>'
                  - '--webhook <url>'
                  - '--email <email>'
                  - '--days <days>'
                  - '--output <file>'
                required: &ref_13 []
              - name: config
                options: *ref_12
                required: *ref_13
              - name: analyze-waste
                options: *ref_12
                required: *ref_13
              - name: test-local
                options: *ref_12
                required: *ref_13
              - name: clean
                options: *ref_12
                required: *ref_13
              - name: export
                options: *ref_12
                required: *ref_13
              - name: setup-monitoring
                options: *ref_12
                required: *ref_13
              - name: analyze-patterns
                options: *ref_12
                required: *ref_13
            tests: &ref_36
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/llm.test.ts
        - llm-analyze.ts:
            functions: []
            fossilized_output: false
            cli_details: []
        - validate-plan.ts:
            functions: []
            fossilized_output: false
            cli_commands:
              - 'validate: implemented'
              - 'batch: implemented'
              - 'create-expected: implemented'
            cli_details:
              - name: validate
                options: &ref_14
                  - '-e, --expected <file>'
                  - '-s, --strict'
                  - '--ignore-timeline'
                  - '--ignore-risks'
                  - '--min-tasks <number>'
                  - '--max-tasks <number>'
                  - '--min-tags <number>'
                  - '--max-tags <number>'
                  - '--required-tags <tags>'
                  - '--forbidden-tags <tags>'
                  - '--output <file>'
                  - '-e, --expected-dir <dir>'
                  - '-p, --pattern <pattern>'
                  - '-s, --strict'
                  - '--output <file>'
                  - '-o, --output <file>'
                required: &ref_15 []
              - name: batch
                options: *ref_14
                required: *ref_15
              - name: create-expected
                options: *ref_14
                required: *ref_15
        - performance-monitor.ts:
            functions:
              - 'PerformanceMonitorCLI: implemented'
            fossilized_output: false
            cli_commands:
              - 'batch: implemented'
              - 'summary: implemented'
              - 'report: implemented'
              - 'insights: implemented'
              - 'clean: implemented'
              - 'list: implemented'
            cli_details:
              - name: batch
                options: &ref_16
                  - '-v, --verbose'
                  - '--log-dir <dir>'
                  - '--log-file <file>'
                  - '--summary-file <file>'
                  - '--report-file <file>'
                  - '--timeout <ms>'
                  - '--capture-output'
                required: &ref_17 []
              - name: summary
                options: *ref_16
                required: *ref_17
              - name: report
                options: *ref_16
                required: *ref_17
              - name: insights
                options: *ref_16
                required: *ref_17
              - name: clean
                options: *ref_16
                required: *ref_17
              - name: list
                options: *ref_16
                required: *ref_17
            tests: &ref_37
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/performance-monitor.test.ts
        - canonical-fossil-manager.ts:
            functions:
              - 'CanonicalFossilManager: implemented'
              - 'detectOwnerRepo: implemented'
            fossilized_output: false
            cli_commands:
              - 'update-validation: implemented'
              - 'update-performance: implemented'
              - 'generate-yaml: implemented'
              - 'git-diff-analysis: implemented'
            cli_details:
              - name: update-validation
                options: &ref_18
                  - '--output <path>'
                  - '--append'
                  - '--overwrite'
                  - '--generate-yaml'
                  - '--yaml-output <path>'
                  - '--dry-run'
                  - '--output <path>'
                  - '--append'
                  - '--overwrite'
                  - '--generate-yaml'
                  - '--yaml-output <path>'
                  - '--dry-run'
                  - '--output <path>'
                required: &ref_19 []
              - name: update-performance
                options: *ref_18
                required: *ref_19
              - name: generate-yaml
                options: *ref_18
                required: *ref_19
              - name: git-diff-analysis
                options: *ref_18
                required: *ref_19
        - analyze-git-diff.ts:
            functions:
              - 'detectOwnerRepo: implemented'
              - 'showHelp: implemented'
              - 'main: implemented'
              - 'displayAnalysisResults: implemented'
              - 'displayBatchResults: implemented'
            fossilized_output: false
            cli_details: []
        - git-diff-fossil-analyzer.ts:
            functions:
              - 'GitDiffFossilAnalyzer: implemented'
              - 'detectOwnerRepo: implemented'
              - 'main: implemented'
            fossilized_output: false
            cli_details: []
        - automate-github-fossils.ts:
            functions:
              - 'detectOwnerRepo: implemented'
            fossilized_output: false
            cli_commands:
              - 'create: implemented'
              - 'validate: implemented'
            cli_details:
              - name: create
                options: &ref_20
                  - '--create-labels'
                  - '--create-milestones'
                  - '--create-issues'
                  - '--output <path>'
                  - '--dry-run'
                  - '--verbose'
                  - '--test'
                  - '--verbose'
                required: &ref_21
                  - '--owner <owner>'
                  - '--repo <repo>'
                  - '--roadmap <path>'
                  - '--roadmap <path>'
              - name: validate
                options: *ref_20
                required: *ref_21
            tests: &ref_38
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-fossil-automation.integration.test.ts
        - validate-types-schemas.ts:
            functions:
              - 'validateSchemaFiles: implemented'
              - 'validateCohesion: implemented'
              - 'extractImports: implemented'
              - 'extractSchemaNames: implemented'
              - 'detectCircularDependency: implemented'
              - 'dfs: implemented'
              - 'generateSummary: implemented'
              - 'outputResults: implemented'
            fossilized_output: false
            cli_details: []
        - llm-predictive-monitoring.ts:
            functions: []
            fossilized_output: false
            cli_commands:
              - 'monitor-before-call: implemented'
              - 'analyze-monitoring: implemented'
              - 'generate-report: implemented'
              - 'demo: implemented'
            cli_details:
              - name: monitor-before-call
                options: &ref_22
                  - '--model <model>'
                  - '--context <context>'
                  - '--purpose <purpose>'
                  - '--value-score <score>'
                  - '--message <message>'
                  - '--config <file>'
                  - '--output <file>'
                  - '--execute'
                  - '--days <days>'
                  - '--output <file>'
                  - '--days <days>'
                  - '--format <format>'
                  - '--output <file>'
                  - '--execute'
                required: &ref_23 []
              - name: analyze-monitoring
                options: *ref_22
                required: *ref_23
              - name: generate-report
                options: *ref_22
                required: *ref_23
              - name: demo
                options: *ref_22
                required: *ref_23
        - ensure-demo-issue.ts:
            functions:
              - 'main: implemented'
            fossilized_output: false
            cli_details: []
        - gather-context.ts:
            functions:
              - 'ContextGatheringService: implemented'
            fossilized_output: true
            cli_commands:
              - 'gather: implemented'
            cli_details:
              - name: gather
                options:
                  - '-o, --output <file>'
                  - '-s, --synthesize'
                required: []
            tests: &ref_39
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/gather-context.integration.test.ts
        - fossil-audit.ts:
            functions:
              - 'fossilAuditCLI: implemented'
              - 'parseCLIArgs: implemented'
              - 'showHelp: implemented'
            fossilized_output: false
            cli_details: []
        - sync-tracker.ts:
            functions: []
            fossilized_output: false
            cli_commands:
              - 'sync-tracker: implemented'
            cli_details:
              - name: sync-tracker
                options:
                  - '--auto-close'
                  - '--sync-tests'
                required: []
        - llm-chat-context.ts:
            functions:
              - 'main: implemented'
            fossilized_output: false
            cli_details: []
            tests: &ref_40
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/llm-chat-context.test.ts
        - fossilize-performance.ts:
            functions:
              - 'fossilizePerformance: implemented'
            fossilized_output: false
            cli_details: []
        - repo-orchestrator.ts:
            functions:
              - 'RepoOrchestratorService: implemented'
              - 'isTestMode: implemented'
              - 'ensureLabelExists: implemented'
              - 'addLabelToIssue: implemented'
              - 'loadAutomationIssueTemplate: implemented'
              - 'getInvocation: implemented'
              - 'fossilizeEntry: implemented'
            fossilized_output: false
            cli_commands:
              - 'orchestrate: implemented'
              - 'analyze: implemented'
              - 'fossilize: implemented'
            cli_details:
              - name: orchestrate
                options: &ref_24
                  - '-b, --branch <branch>'
                  - '-w, --workflow <workflow>'
                  - '-c, --context <context>'
                  - '--plan-mode <mode>'
                  - '--no-create-issues'
                  - '--create-prs'
                  - '--auto-merge'
                  - '--no-notifications'
                  - '--summary'
                  - '--test'
                  - '--mock'
                  - '--no-fossilize'
                  - '--no-fossilize'
                  - '--test'
                  - '--mock'
                required: &ref_25 []
              - name: analyze
                options: *ref_24
                required: *ref_25
              - name: fossilize
                options: *ref_24
                required: *ref_25
            tests: &ref_41
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/repo-orchestrator.test.ts
        - event-loop-monitor.ts:
            functions:
              - 'EventLoopMonitorCLI: implemented'
            fossilized_output: false
            cli_commands:
              - 'start: implemented'
              - 'stack: implemented'
              - 'report: implemented'
              - 'stop: implemented'
            cli_details:
              - name: start
                options: &ref_26
                  - '-v, --verbose'
                  - '-o, --output <file>'
                  - '-i, --interval <ms>'
                  - '-t, --timeout <ms>'
                  - '-m, --memory <mb>'
                required: &ref_27 []
              - name: stack
                options: *ref_26
                required: *ref_27
              - name: report
                options: *ref_26
                required: *ref_27
              - name: stop
                options: *ref_26
                required: *ref_27
        - error-snapshot-log.ts:
            functions: []
            fossilized_output: false
            cli_details: []
            tests: &ref_42
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/errorSnapshotLogUtils.test.ts
    services:
      path: src/services
      files:
        - llmPredictiveMonitoring.ts:
            functions:
              - 'LLMPredictiveMonitoringService: implemented'
              - 'to: implemented'
              - 'createPredictiveMonitoringService: implemented'
              - 'for: implemented'
              - 'monitorBeforeLLMCall: implemented'
            fossilized_output: false
        - semantic-tagger.ts:
            functions:
              - 'SemanticTaggerService: implemented'
            fossilized_output: false
            tests: &ref_56
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/semantic-tagger.test.ts
        - github.ts:
            functions:
              - 'for: implemented'
              - 'GitHubService: implemented'
              - 'loadAndFillAutomationTemplate: implemented'
            fossilized_output: false
            tests: &ref_57
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/index.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/cli/issues-create.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/github-projects-integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/github-projects-integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/setup.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-issues.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/transversal-fossil-github-sync.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-fossil-automation.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-projects-integration.integration.test.ts
        - llm.ts:
            functions:
              - 'LLMService: implemented'
              - 'callOpenAIChat: implemented'
            fossilized_output: false
            tests: &ref_58
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/index.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/llmInputValidator.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/cli/llm-plan.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/add-llm-insights-to-roadmap.newline.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-workflow.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-content-automation.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-plan.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-issue-manager.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/llm-chat-context.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/llm.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/semantic-tagger.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/llm-fossilization.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/repo-orchestrator-fossilization.integration.test.ts
        - llmEnhanced.ts:
            functions:
              - 'EnhancedLLMService: implemented'
              - 'for: implemented'
              - 'createEnhancedLLMService: implemented'
              - 'for: implemented'
              - 'callLLMEnhanced: implemented'
              - 'for: implemented'
              - 'analyzeLLMInput: implemented'
            fossilized_output: false
        - index.ts:
            functions: []
            fossilized_output: false
            tests: &ref_59
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/index.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/learning-analysis-engine.test.ts
        - vscodeAI.ts:
            functions:
              - 'VSCodeAIService: implemented'
              - 'to: implemented'
              - 'createVSCodeAIService: implemented'
              - 'for: implemented'
              - 'callVSCodeAI: implemented'
              - 'for: implemented'
              - 'processSnapshotWithVSCodeAI: implemented'
            fossilized_output: false
    utils:
      path: src/utils
      files:
        - eventLoopMonitor.ts:
            functions:
              - 'EventLoopMonitor: implemented'
              - 'call: implemented'
              - 'getEventLoopMonitor: implemented'
              - 'startGlobalMonitoring: implemented'
              - 'stopGlobalMonitoring: implemented'
              - 'trackOperation: implemented'
              - 'getCallStackSummary: implemented'
              - 'exportMonitoringData: implemented'
              - 'generateMonitoringReport: implemented'
            fossilized_output: false
        - llmFossilManagerFactory.ts:
            functions:
              - 'createLLMFossilManagerFactory: implemented'
            fossilized_output: false
        - timeout-time-integration.ts:
            functions:
              - 'executeWithTimeoutAndTime: implemented'
              - 'executeWithTimeCommand: implemented'
              - 'executeWithStandardTimeout: implemented'
              - 'executeCommandWithTimeoutAndTime: implemented'
              - 'demonstrateTimeoutTimeIntegration: implemented'
            fossilized_output: false
            tests: &ref_43
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/timeout-time-integration.test.ts
        - roadmapInsightsAccessor.ts:
            functions:
              - 'generateTaskId: implemented'
              - 'loadInsightsCollection: implemented'
              - 'saveInsightsCollection: implemented'
              - 'findTaskInsights: implemented'
              - 'findTaskInsightsByTitle: implemented'
              - 'getTaskInsights: implemented'
              - 'getInsightsByStatus: implemented'
              - 'getInsightsByTag: implemented'
              - 'getInsightsByOwner: implemented'
              - 'getInsightsByMilestone: implemented'
              - 'getHighImpactInsights: implemented'
              - 'getInsightsWithBlockers: implemented'
              - 'getCompletedTaskInsights: implemented'
              - 'getInProgressTaskInsights: implemented'
              - 'getPlannedTaskInsights: implemented'
              - 'getPendingTaskInsights: implemented'
              - 'getInsightsWithDeadlines: implemented'
              - 'getInsightsByCategory: implemented'
              - 'getInsightsSummary: implemented'
            fossilized_output: false
        - simpleTestMonitor.ts:
            functions:
              - 'SimpleTestMonitor: implemented'
              - 'startSimpleTestMonitoring: implemented'
              - 'stopSimpleTestMonitoring: implemented'
              - 'trackSimpleTest: implemented'
              - 'isSimpleTestMonitoringActive: implemented'
              - 'getSimpleTestResults: implemented'
              - 'getSimpleTestSummary: implemented'
            fossilized_output: false
            tests: &ref_44
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/testMonitor-simplified.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/simpleTestMonitor.test.ts
        - llmFossilManager.ts:
            functions:
              - 'LLMFossilManager: implemented'
              - 'for: implemented'
              - 'createLLMFossilManager: implemented'
              - 'for: implemented'
              - 'fossilizeLLMInsight: implemented'
            fossilized_output: false
        - json.ts:
            functions:
              - 'parseJsonSafe: implemented'
            fossilized_output: false
            tests: &ref_45
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/index.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/errorSnapshotLogUtils.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/checklistUpdater.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/learning-analysis-engine.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automated-monitoring-orchestrator.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/footprint-system.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/add-llm-insights-to-roadmap.newline.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/llm-chat-context.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/llm.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/test-mocks.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/gather-context.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-issues.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/transversal-fossil-github-sync.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/repo-orchestrator-fossilization.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/scripts.e2e.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/examples.e2e.test.ts
        - performanceMonitor.ts:
            functions:
              - 'PerformanceMonitor: implemented'
              - 'runPerformanceMonitorCLI: implemented'
            fossilized_output: false
        - roadmapInsightsExtractor.ts:
            functions:
              - 'generateTaskId: implemented'
              - 'generateFossilId: implemented'
              - 'createRoadmapInsightsCollection: implemented'
              - 'createRoadmapInsightsWebPublication: implemented'
              - 'generateInsightsMarkdownReport: implemented'
              - 'saveInsightsOutputs: implemented'
            fossilized_output: false
        - fossilIssue.ts:
            functions:
              - 'IssueBodyFileManager: implemented'
              - 'GitHubIssueManager: implemented'
              - 'IssueFossilManager: implemented'
              - 'toSectionLabel: implemented'
              - 'ensureLabel: implemented'
              - 'generateAutomationIssueBody: implemented'
              - 'createFossilIssue: implemented'
            fossilized_output: false
            tests: &ref_46
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/cli/issues-create.test.ts
        - syncTracker.ts:
            functions:
              - 'runGh: implemented'
              - 'getMilestoneIdByTitle: implemented'
              - 'ensureMilestone: implemented'
              - 'getIssueByTitle: implemented'
              - 'ensureIssue: implemented'
              - 'addIssueToProject: implemented'
              - 'closeIssueByTitle: implemented'
              - 'ensureTestOrFossilIssue: implemented'
              - 'syncTrackerWithGitHub: implemented'
            fossilized_output: false
        - roadmapToMarkdown.ts:
            functions:
              - 'roadmapToMarkdown: implemented'
            fossilized_output: false
        - errorSnapshotLogUtils.ts:
            functions:
              - 'createError: implemented'
              - 'createSnapshotFossil: implemented'
              - 'calculatePerformanceMetrics: implemented'
              - 'createLogAnalysisFossil: implemented'
              - 'generateContextSuggestions: implemented'
              - 'createErrorFossil: implemented'
            fossilized_output: false
            tests: &ref_47
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/errorSnapshotLogUtils.test.ts
        - fileFilters.ts:
            functions:
              - 'isRelevantSourceFile: implemented'
            fossilized_output: false
        - visualDiagramGenerator.ts:
            functions:
              - 'generateWorkflowDiagram: implemented'
              - 'generateArchitectureDiagram: implemented'
              - 'generateDependencyDiagram: implemented'
              - 'generateRiskDiagram: implemented'
              - 'generateSequenceDiagram: implemented'
              - 'generateProgressDiagram: implemented'
              - 'generateSystemOverviewDiagram: implemented'
              - 'generateDecisionTreeDiagram: implemented'
              - 'generateVisualIssueBody: implemented'
              - 'generateVisualFossilPublication: implemented'
              - 'shouldIncludeVisuals: implemented'
              - 'extractVisualContext: implemented'
            fossilized_output: false
        - memoryMonitorUtils.ts:
            functions:
              - 'getSystemMemoryInfo: implemented'
              - 'getProcessGroupMemory: implemented'
              - 'getProcessGroupDetails: implemented'
              - 'createMemorySnapshot: implemented'
              - 'logMemorySnapshot: implemented'
              - 'createMemoryMonitoringFossil: implemented'
              - 'saveMemoryMonitoringFossil: implemented'
              - 'loadMemoryMonitoringFossil: implemented'
              - 'createMemoryMonitoringSummary: implemented'
              - 'getCurrentProcessMemoryMB: implemented'
              - 'isProcessRunning: implemented'
              - 'sleep: implemented'
            fossilized_output: false
        - llmInputValidator.ts:
            functions:
              - 'LLMInputValidator: implemented'
              - 'for: implemented'
              - 'validateLLMInput: implemented'
              - 'for: implemented'
              - 'preprocessLLMInput: implemented'
              - 'for: implemented'
              - 'analyzeLLMContentQuality: implemented'
            fossilized_output: false
            tests: &ref_48
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/llmInputValidator.test.ts
        - githubFossilManager.ts:
            functions:
              - 'GitHubFossilManager: implemented'
            fossilized_output: false
        - fossilLabel.ts:
            functions:
              - 'createFossilLabel: implemented'
              - 'ensureLabel: implemented'
            fossilized_output: false
        - fossilMilestone.ts:
            functions:
              - 'createFossilMilestone: implemented'
              - 'ensureMilestone: implemented'
            fossilized_output: false
        - llmSnapshotExporter.ts:
            functions:
              - 'LLMSnapshotExporter: implemented'
              - 'exportLLMSnapshot: implemented'
              - 'exportForChat: implemented'
            fossilized_output: false
        - cli.ts:
            functions:
              - 'executeCommand: implemented'
              - 'executeCommandJSON: implemented'
              - 'safeParseJSON: implemented'
              - 'isCommandAvailable: implemented'
              - 'executeCommandWithRetry: implemented'
              - 'formatOutput: implemented'
              - 'createServiceResponse: implemented'
              - 'issueExists: implemented'
              - 'getCurrentRepoOwner: implemented'
              - 'getCurrentRepoName: implemented'
              - 'getCurrentRepoInfo: implemented'
              - 'noop: implemented'
              - 'analyzeFileDependencies: implemented'
              - 'resolveImportPath: implemented'
              - 'resolveAliasPath: implemented'
              - 'createDependencyAwareBatches: implemented'
              - 'topologicalSort: implemented'
              - 'visit: implemented'
            fossilized_output: false
            tests: &ref_49
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/timeout-time-integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/cli/llm-plan.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/cli/issues-create.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-plan.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/llm-chat-context.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/setup.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/gather-context.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-issues.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-fossil-automation.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/examples.e2e.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/fossilization-workflow.e2e.test.ts
        - gitDiffAnalyzer.ts:
            functions:
              - 'GitDiffAnalyzer: implemented'
            fossilized_output: false
        - markdownChecklist.ts:
            functions:
              - 'updateMarkdownChecklist: implemented'
              - 'extractJsonBlock: implemented'
              - 'checklistToMarkdown: implemented'
              - 'metadataToMarkdown: implemented'
            fossilized_output: false
            tests: &ref_50
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/markdownChecklist.test.ts
        - yamlToJson.ts:
            functions:
              - 'yamlToJson: implemented'
            fossilized_output: false
        - fossilManager.ts:
            functions:
              - 'FossilManager: implemented'
              - 'createFossilManager: implemented'
              - 'for: implemented'
              - 'createFossilIssue: implemented'
              - 'for: implemented'
              - 'createFossilLabel: implemented'
              - 'for: implemented'
              - 'createFossilMilestone: implemented'
            fossilized_output: false
        - fossilize.ts:
            functions:
              - 'generateContentHash: implemented'
              - 'generateId: implemented'
              - 'toFossilEntry: implemented'
              - 'outputFossil: implemented'
              - 'writeFossilToFile: implemented'
              - 'ensureFossilDir: implemented'
              - 'fossilizeLLMInsight: implemented'
              - 'fossilizeLLMBenchmark: implemented'
              - 'fossilizeLLMDiscovery: implemented'
            fossilized_output: true
            tests: &ref_51
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/fossilize.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/footprint-system.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/llm.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/gather-context.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/llm-fossilization.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/repo-orchestrator-fossilization.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/fossilization-workflow.e2e.test.ts
        - timeout.ts:
            functions:
              - 'with: implemented'
              - 'withTimeout: implemented'
              - 'executeWithTimeout: implemented'
              - 'executeWithTimeCommand: implemented'
              - 'executeShellWithTimeout: implemented'
              - 'executeShellWithTimeCommand: implemented'
              - 'delay: implemented'
              - 'retryWithTimeout: implemented'
              - 'allWithTimeout: implemented'
              - 'raceWithTimeout: implemented'
              - 'executeCommandWithTimeAndTimeout: implemented'
            fossilized_output: false
            tests: &ref_52
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/timeout.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/timeout-time-integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/errorSnapshotLogUtils.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/migrate.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/migrations/001-improve-project-structure.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/learning-analysis-engine.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/setup/create-milestone.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automated-monitoring-orchestrator.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/github-projects-integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/commit-essential-files.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/monitor-progress.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/repo-orchestrator.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/backup-context.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-content-automation.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/simple-monitor.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/qa-workflow.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/github-projects-integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/audit-shell-scripts.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/monitor-progress.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/review-workflow.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-issue-manager.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/timeout-wrapper.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/llm-chat-context.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/monitoring/check-issues.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/monitoring/quick-status.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/quick-status.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/setup.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/monitoring-quick-status.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/quick-status.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/monitor-progress.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/repo-orchestrator-fossilization.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-projects-integration.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/base-tester.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/examples.e2e.test.ts
        - testMonitor.ts:
            functions:
              - 'TestMonitor: implemented'
              - 'getTestMonitor: implemented'
              - 'startTestMonitoring: implemented'
              - 'stopTestMonitoring: implemented'
              - 'monitorTest: implemented'
              - 'hasHangingTests: implemented'
              - 'getHangingTests: implemented'
              - 'getTestMonitoringStatus: implemented'
              - 'generateTestStatusReport: implemented'
            fossilized_output: false
            tests: &ref_53
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/testMonitor-simplified.test.ts
        - performanceTracker.ts:
            functions:
              - 'PerformanceTracker: implemented'
              - 'runPerformanceTrackerCLI: implemented'
            fossilized_output: false
        - typeSchemaValidator.ts:
            functions:
              - 'TypeSchemaValidator: implemented'
              - 'methods: implemented'
              - 'methods: implemented'
              - 'methods: implemented'
              - 'body: implemented'
              - 'missing: implemented'
              - 'blocks: implemented'
              - 'runTypeSchemaValidation: implemented'
            fossilized_output: false
        - index.ts:
            functions:
              - 'for: implemented'
              - 'for: implemented'
            fossilized_output: false
            tests: &ref_54
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/index.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/learning-analysis-engine.test.ts
        - consolidated-utilities.ts:
            functions:
              - 'yamlToJson: implemented'
            fossilized_output: false
        - timestampFilter.ts:
            functions:
              - 'TimestampFilter: implemented'
              - 'main: implemented'
            fossilized_output: false
        - checklistUpdater.ts:
            functions:
              - 'detectFileType: implemented'
              - 'createBackup: implemented'
              - 'updateMarkdownChecklistFile: implemented'
              - 'updateJsonChecklistFile: implemented'
              - 'updateYamlChecklistFile: implemented'
              - 'updateRoadmapTasks: implemented'
              - 'updateChecklistArray: implemented'
              - 'to: implemented'
              - 'updateChecklistFile: implemented'
              - 'updateMultipleChecklistFiles: implemented'
              - 'parseChecklistUpdates: implemented'
              - 'generateUpdateReport: implemented'
            fossilized_output: false
            tests: &ref_55
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/checklistUpdater.test.ts
        - githubCliCommands.ts:
            functions:
              - 'GitHubCLICommands: implemented'
            fossilized_output: false
        - curateFossil.ts:
            functions:
              - 'curateAndCheck: implemented'
            fossilized_output: false
        - issueMigrationUtils.ts:
            functions:
              - 'parseLegacySections: implemented'
              - 'buildModernBody: implemented'
            fossilized_output: false
        - canonical-test-fossil-manager.ts:
            functions:
              - 'CanonicalTestFossilManager: implemented'
            fossilized_output: true
        - fossilSummary.ts:
            functions:
              - 'getFossilSummary: implemented'
            fossilized_output: false
        - plan-validator.ts:
            functions:
              - 'PlanValidator: implemented'
            fossilized_output: false
    core:
      path: src/core
      files:
        - config.ts:
            functions:
              - 'getEnv: implemented'
              - 'for: implemented'
              - 'hasServiceToken: implemented'
              - 'for: implemented'
              - 'getServiceToken: implemented'
              - 'validateConfig: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/index.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/core/config.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/testMonitor-simplified.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/simpleTestMonitor.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automated-monitoring-orchestrator.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/llm.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/semantic-tagger.test.ts
    types:
      path: src/types
      files:
        - vscode-ai.ts:
            functions: []
            fossilized_output: false
        - validation.ts:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/index.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/core/config.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/llmInputValidator.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/learning-analysis-engine.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/footprint-system.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/llm-chat-context.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/transversal-fossil-github-sync.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/base-tester.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/examples.e2e.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/fossilization-workflow.e2e.test.ts
        - llmFossil.ts:
            functions:
              - 'createLLMValidationFossil: implemented'
              - 'logProgress: implemented'
              - 'logError: implemented'
              - 'createLLMErrorPreventionFossil: implemented'
              - 'createLLMQualityMetricsFossil: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/llm-fossilization.integration.test.ts
        - external.ts:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
        - roadmapInsights.ts:
            functions: []
            fossilized_output: false
        - memory-monitoring.ts:
            functions: []
            fossilized_output: false
        - performance.ts:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/errorSnapshotLogUtils.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/llmInputValidator.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/performance-notifications.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/performance-monitor.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/performance-insights.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/learning-analysis-engine.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automated-monitoring-orchestrator.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/semantic-tagger.test.ts
        - github.ts:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/index.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/cli/issues-create.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/github-projects-integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/github-projects-integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/setup.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-issues.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/transversal-fossil-github-sync.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-fossil-automation.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-projects-integration.integration.test.ts
        - type-schema-validator.ts:
            functions: []
            fossilized_output: false
        - workflow.ts:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/core/config.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/blog-workflow.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-workflow.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/qa-workflow.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/review-workflow.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/semantic-tagger.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/repo-orchestrator-fossilization.integration.test.ts
        - checklist-updater.ts:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/checklistUpdater.test.ts
        - test-monitoring.ts:
            functions: []
            fossilized_output: false
        - examples.ts:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/errorSnapshotLogUtils.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/transversal-fossil-github-sync.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/examples.e2e.test.ts
        - cli.ts:
            functions:
              - 'with: implemented'
              - 'parseCLIArgs: implemented'
              - 'processParsed: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/timeout-time-integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/cli/llm-plan.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/cli/issues-create.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-plan.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/llm-chat-context.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/setup.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/gather-context.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-issues.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-fossil-automation.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/examples.e2e.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/fossilization-workflow.e2e.test.ts
        - schemas.ts:
            functions: []
            fossilized_output: true
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
        - fossil.ts:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/testMonitor-simplified.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/errorSnapshotLogUtils.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/simpleTestMonitor.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/fossilize.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/cli/issues-create.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/learning-analysis-engine.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automated-monitoring-orchestrator.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/footprint-system.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/llm-chat-context.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/setup.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/llm.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/semantic-tagger.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/test-mocks.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/gather-context.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/llm-fossilization.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/transversal-fossil-github-sync.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-fossil-automation.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/repo-orchestrator-fossilization.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/scripts.e2e.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/examples.e2e.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/fossilization-workflow.e2e.test.ts
        - llm.ts:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/index.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/llmInputValidator.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/cli/llm-plan.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/add-llm-insights-to-roadmap.newline.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-workflow.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-content-automation.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-plan.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-issue-manager.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/llm-chat-context.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/llm.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/semantic-tagger.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/llm-fossilization.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/repo-orchestrator-fossilization.integration.test.ts
        - core.ts:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/core/config.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/testMonitor-simplified.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/learning-analysis-engine.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automated-monitoring-orchestrator.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/footprint-system.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/llm.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/semantic-tagger.test.ts
        - legacy-fossil.ts:
            functions: []
            fossilized_output: false
        - automation.ts:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/index.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/github-projects-integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/testing-status.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/test-automation-scripts.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/repo-orchestrator.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-workflow.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/backup-context.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-content-automation.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/simple-monitor.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/batch-commit-orchestrator.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/qa-workflow.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/github-projects-integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/audit-shell-scripts.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/monitor-progress.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/review-workflow.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-issue-manager.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/timeout-wrapper.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/services/semantic-tagger.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/quick-status.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-fossil-automation.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-projects-integration.integration.test.ts
        - footprint.ts:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/footprint-system.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/commit-with-footprint.test.ts
        - index.ts:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/schemas.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/types/index.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/learning-analysis-engine.test.ts
        - fossil-audit.ts:
            functions: []
            fossilized_output: false
        - audit.ts:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/audit-shell-scripts.test.ts
        - event-loop-monitoring.ts:
            functions: []
            fossilized_output: false
        - error-snapshot-log.ts:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/utils/errorSnapshotLogUtils.test.ts
    scripts:
      path: scripts
      files:
        - commit-insight-generator.ts:
            functions:
              - 'CommitInsightGenerator: implemented'
              - 'parseArgs: implemented'
              - 'main: implemented'
            fossilized_output: false
        - automated-monitoring-orchestrator.ts:
            functions:
              - 'AutomatedMonitoringOrchestrator: implemented'
              - 'main: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automated-monitoring-orchestrator.test.ts
        - remove-llm-insights-from-roadmap.ts:
            functions:
              - 'removeLLMInsights: implemented'
              - 'createBackup: implemented'
              - 'addCleaningMetadata: implemented'
              - 'main: implemented'
            fossilized_output: false
        - llm-snapshot-export.ts:
            functions:
              - 'exportLLMSnapshots: implemented'
            fossilized_output: false
        - setup.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/setup/create-milestone.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/setup.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/base-tester.ts
        - simplified-ml-process-integration.ts:
            functions:
              - 'SimplifiedMLProcessIntegration: implemented'
              - 'main: implemented'
            fossilized_output: false
        - test-comprehensive-llm-snapshotting.ts:
            functions:
              - 'testComprehensiveLLMSnapshotting: implemented'
            fossilized_output: false
        - validate-snapshot-schemas.ts:
            functions:
              - 'SnapshotSchemaValidator: implemented'
              - 'main: implemented'
            fossilized_output: false
        - 001-improve-project-structure.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/migrations/001-improve-project-structure.test.ts
        - 003-migrate-legacy-issues.ts:
            functions:
              - 'getLLMSuggestions: implemented'
              - 'migrate: implemented'
            fossilized_output: false
        - 002-project-structure-migration.ts:
            functions:
              - 'ensureDir: implemented'
              - 'moveFile: implemented'
            fossilized_output: false
        - learning-analysis-engine.ts:
            functions:
              - 'LearningAnalysisEngine: implemented'
              - 'main: implemented'
            fossilized_output: true
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/learning-analysis-engine.test.ts
        - targeted-cleanup.ts:
            functions:
              - 'TargetedCleanupOrchestrator: implemented'
              - 'main: implemented'
            fossilized_output: false
        - test-new-fossil-generation.ts:
            functions:
              - 'testNewFossilGeneration: implemented'
            fossilized_output: false
        - vscode-extension-snapshot-processor.ts:
            functions:
              - 'VSCodeExtensionSimulator: implemented'
              - 'main: implemented'
            fossilized_output: false
        - audit-test-performance.ts:
            functions:
              - 'TestPerformanceAuditor: implemented'
              - 'main: implemented'
            fossilized_output: false
        - generate-fresh-llm-insights-simple.ts:
            functions:
              - 'generateTaskId: implemented'
              - 'walkTasks: implemented'
              - 'generateSimpleInsight: implemented'
              - 'determineCategory: implemented'
              - 'determineImpact: implemented'
              - 'generateSummary: implemented'
              - 'generateBlockers: implemented'
              - 'generateRecommendations: implemented'
              - 'generateWebInsights: implemented'
              - 'main: implemented'
            fossilized_output: false
        - automatic-procedure.ts:
            functions:
              - 'runTypeScriptValidation: implemented'
              - 'runTestSuite: implemented'
              - 'runGitDiffAnalysis: implemented'
              - 'generateReport: implemented'
              - 'generateRecommendations: implemented'
              - 'runAutomaticProcedure: implemented'
              - 'runQuickValidation: implemented'
            fossilized_output: false
        - execute-commit-message-batch-plan.ts:
            functions:
              - 'EnhancedCommitMessageBatchExecutor: implemented'
              - 'main: implemented'
            fossilized_output: false
        - audit-commit-messages-batch-plan.ts:
            functions:
              - 'EnhancedCommitMessageBatchAuditor: implemented'
              - 'main: implemented'
            fossilized_output: false
        - commit-with-footprint.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/commit-with-footprint.test.ts
        - analyze-roadmap-llm-insights.ts:
            functions:
              - 'generateTaskId: implemented'
              - 'analyzeTask: implemented'
              - 'analyzeMilestone: implemented'
              - 'analyzeOverallProgress: implemented'
              - 'extractAllTasks: implemented'
              - 'main: implemented'
            fossilized_output: false
        - cleanup-insights-analyzer.ts:
            functions:
              - 'analyzeCleanupInsights: implemented'
              - 'generateRecommendations: implemented'
              - 'exportRecommendationsForLLM: implemented'
            fossilized_output: false
        - analyze-bun-test-snapshots.ts:
            functions:
              - 'BunTestSnapshotAnalyzer: implemented'
            fossilized_output: false
        - generate-evolving-footprint.ts:
            functions:
              - 'generateEvolvingFootprint: implemented'
              - 'createNewFootprint: implemented'
              - 'getGitInfo: implemented'
              - 'getFileInfo: implemented'
              - 'getFileSnapshot: implemented'
              - 'calculateStats: implemented'
              - 'parseFootprint: implemented'
              - 'writeFootprint: implemented'
            fossilized_output: false
        - canonical-fossil-cleanup.ts:
            functions:
              - 'CanonicalFossilCleanup: implemented'
              - 'main: implemented'
            fossilized_output: false
        - git-history-llm-insights.ts:
            functions:
              - 'GitHistoryLLMInsightsExtractor: implemented'
              - 'parseArgs: implemented'
              - 'main: implemented'
            fossilized_output: false
        - migrate-legacy-issues.ts:
            functions:
              - 'parseLegacySections: implemented'
              - 'buildModernBody: implemented'
              - 'hasModernJsonBlock: implemented'
              - 'getLLMSuggestions: implemented'
              - 'migrate: implemented'
            fossilized_output: false
        - enhanced-pre-commit-validator.ts:
            functions:
              - 'EnhancedPreCommitValidator: implemented'
              - 'parseArgs: implemented'
              - 'main: implemented'
              - 'for: implemented'
            fossilized_output: false
        - llm-audit.ts:
            functions:
              - 'loadSnapshots: implemented'
              - 'analyzeSnapshots: implemented'
              - 'generateAuditReport: implemented'
              - 'runLLMAudit: implemented'
            fossilized_output: false
        - test-precommit-fallback.ts:
            functions:
              - 'testFallback: implemented'
            fossilized_output: false
        - fossilize-roadmap.ts:
            functions: []
            fossilized_output: false
        - consolidate-small-utilities.ts:
            functions:
              - 'SmallUtilityConsolidator: implemented'
              - 'main: implemented'
            fossilized_output: false
        - validate-llm-snapshotting.ts:
            functions:
              - 'validateLLMSnapshotting: implemented'
            fossilized_output: false
        - commit-essential-files.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/commit-essential-files.test.ts
        - unified-fossil-consolidator.ts:
            functions:
              - 'UnifiedFossilConsolidator: implemented'
              - 'main: implemented'
            fossilized_output: false
        - reset-timestamp-changes.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/reset-timestamp-changes.test.ts
        - cleanup-test-fossils.ts:
            functions:
              - 'main: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/scripts.e2e.test.ts
        - create-milestone.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/setup/create-milestone.test.ts
        - audit-llm-snapshots.ts:
            functions:
              - 'LLMSnapshotAuditor: implemented'
            fossilized_output: false
        - demo-core-data-structures.ts:
            functions:
              - 'generateWorkflowDiagram: implemented'
              - 'generateDataFlowDiagram: implemented'
              - 'generateRelationshipDiagram: implemented'
              - 'flattenTasks: implemented'
              - 'generateTaskId: implemented'
              - 'addInsights: implemented'
              - 'generateMetadata: implemented'
              - 'transformYamlToJson: implemented'
              - 'generateMarkdownDocumentation: implemented'
              - 'runDemo: implemented'
            fossilized_output: false
        - test-sanitization-simple.ts:
            functions:
              - 'testSanitizationSimple: implemented'
            fossilized_output: false
        - implement-enriched-extensions.ts:
            functions:
              - 'EnrichedExtensionsImplementer: implemented'
              - 'main: implemented'
            fossilized_output: false
        - validate-footprint.ts:
            functions:
              - 'validateFootprint: implemented'
              - 'parseFootprint: implemented'
              - 'runValidationTests: implemented'
              - 'validateBasicStructure: implemented'
              - 'validateGitInfo: implemented'
              - 'validateFileInfo: implemented'
              - 'validateStatistics: implemented'
              - 'validateMachineInfo: implemented'
              - 'validateFossilization: implemented'
              - 'validateFilePathSecurity: implemented'
              - 'validateFileSizeLimits: implemented'
              - 'validateTimestamp: implemented'
              - 'validateChecksum: implemented'
              - 'validateStrictRules: implemented'
              - 'calculateSummary: implemented'
              - 'calculateScore: implemented'
              - 'printValidationSummary: implemented'
              - 'writeValidationResult: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/footprint-system.test.ts
        - test-api-key-sanitization.ts:
            functions:
              - 'testApiKeySanitization: implemented'
            fossilized_output: false
        - monitor-progress.sh:
            functions:
              - 'with: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/monitor-progress.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/monitor-progress.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/monitoring/monitor-progress.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/monitor-progress.integration.test.ts
        - migrate.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/migrate.test.ts
        - fossil-summary-json.ts:
            functions:
              - 'main: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/scripts.e2e.test.ts
        - validate-types-schemas-simple.ts:
            functions:
              - 'SimpleTypeSchemaValidator: implemented'
              - 'main: implemented'
            fossilized_output: false
        - performance-notifications.sh:
            functions:
              - 'with: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/performance-notifications.test.ts
        - precommit-llm-insight.ts:
            functions:
              - 'detectOwnerRepo: implemented'
              - 'logMemoryUsage: implemented'
              - 'getStagedFiles: implemented'
              - 'getFileDiff: implemented'
              - 'getFileContent: implemented'
              - 'hashInput: implemented'
              - 'promptForApproval: implemented'
              - 'findMatchingRoadmapTasks: implemented'
              - 'searchTasks: implemented'
              - 'updateRoadmapWithInsight: implemented'
              - 'advancedReviewCLI: implemented'
              - 'filterRelevantFiles: implemented'
              - 'main: implemented'
            fossilized_output: false
        - quick-validate-llm.ts:
            functions:
              - 'quickValidateLLM: implemented'
            fossilized_output: false
        - canonical-fossil-migration.ts:
            functions:
              - 'CanonicalFossilMigration: implemented'
              - 'main: implemented'
            fossilized_output: false
        - commit-message-validator.ts:
            functions:
              - 'CommitMessageValidator: implemented'
              - 'detectOwnerRepo: implemented'
              - 'parseArgs: implemented'
              - 'main: implemented'
            fossilized_output: false
        - smart-batch-orchestrator.ts:
            functions:
              - 'SmartBatchOrchestrator: implemented'
              - 'main: implemented'
            fossilized_output: false
        - convert-fossils-to-snake-case.ts:
            functions:
              - 'toSnakeCase: implemented'
              - 'convertFilename: implemented'
              - 'convertDirectoryNames: implemented'
              - 'convertFileNames: implemented'
              - 'removeEmptyDirectories: implemented'
              - 'updateFilePaths: implemented'
              - 'main: implemented'
            fossilized_output: false
        - ml-ready-fossil-consolidator.ts:
            functions:
              - 'MLReadyFossilConsolidator: implemented'
              - 'main: implemented'
            fossilized_output: false
        - check-api-keys-in-fossils.ts:
            functions:
              - 'checkApiKeysInFossils: implemented'
            fossilized_output: false
        - analyze-fossil-creation.ts:
            functions:
              - 'FossilCreationAnalyzer: implemented'
              - 'main: implemented'
            fossilized_output: false
        - update-issue-checklist.ts:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/scripts.e2e.test.ts
        - add-llm-insights-to-roadmap.ts:
            functions:
              - 'ensureInsights: implemented'
              - 'main: implemented'
            fossilized_output: false
        - update-project-status.ts:
            functions:
              - 'names: implemented'
              - 'generateLLMRecommendationsFromYAML: implemented'
              - 'detectStatus: implemented'
              - 'extractCliDetails: implemented'
              - 'walk: implemented'
              - 'extractFunctionsAndClasses: implemented'
              - 'detectFossilization: implemented'
              - 'scanDir: implemented'
              - 'mapTestsToFunctions: implemented'
              - 'toProjectStatusYamlStructure: implemented'
              - 'mergeWithExistingYaml: implemented'
              - 'buildDeveloperSummary: implemented'
              - 'to: implemented'
              - 'updateProjectStatus: implemented'
              - 'main: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/scripts.e2e.test.ts
        - generate-fresh-llm-insights.ts:
            functions:
              - 'generateTaskId: implemented'
              - 'walkTasks: implemented'
              - 'generateLLMInsight: implemented'
              - 'generateWebInsights: implemented'
              - 'main: implemented'
            fossilized_output: false
        - cleanup-fossils.ts:
            functions:
              - 'main: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/scripts.e2e.test.ts
        - test-llm-snapshotting-simple.ts:
            functions:
              - 'testLLMSnapshottingSimple: implemented'
            fossilized_output: false
        - publish-roadmap-insights.ts:
            functions:
              - 'generateBlogPost: implemented'
              - 'generatePublicAPI: implemented'
              - 'generateRSSEntry: implemented'
              - 'main: implemented'
            fossilized_output: false
        - precommit-validate.ts:
            functions:
              - 'detectOwnerRepo: implemented'
              - 'has: implemented'
              - 'parseJsonSafe: implemented'
              - 'to: implemented'
              - 'determineSchemaForFile: implemented'
            fossilized_output: false
        - analyze-git-diff.ts:
            functions:
              - 'analyzeGitDiff: implemented'
              - 'parseFileChanges: implemented'
              - 'determineImpact: implemented'
              - 'analyzeLogPatterns: implemented'
              - 'generateSummary: implemented'
              - 'generateRecommendations: implemented'
              - 'displayDetailedAnalysis: implemented'
              - 'displaySummary: implemented'
              - 'trackMonitoringEvolution: implemented'
            fossilized_output: false
        - generate-llm-insights.ts:
            functions:
              - 'isPlaceholder: implemented'
              - 'generateLLMInsight: implemented'
              - 'main: implemented'
            fossilized_output: false
        - validate-types-schemas.ts:
            functions:
              - 'detectOwnerRepo: implemented'
              - 'main: implemented'
            fossilized_output: false
        - ml-ready-pre-commit-validator.ts:
            functions:
              - 'MLReadyPreCommitValidator: implemented'
              - 'main: implemented'
            fossilized_output: false
        - commit-message-template.ts:
            functions:
              - 'CommitMessageTemplateSystem: implemented'
              - 'parseArgs: implemented'
              - 'main: implemented'
            fossilized_output: false
        - fix-validation-issues.ts:
            functions:
              - 'fixValidationIssues: implemented'
              - 'fixMissingSchemaExports: implemented'
              - 'fixContextEntryInterface: implemented'
              - 'fixLLMTypes: implemented'
              - 'fixContextQueryInterface: implemented'
              - 'fixSpecificFileIssues: implemented'
            fossilized_output: false
        - performance-monitor.sh:
            functions:
              - 'with: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/performance-monitor.test.ts
        - validate-fresh-insights.ts:
            functions:
              - 'validateInsight: implemented'
              - 'validateAllInsights: implemented'
              - 'generateValidationReport: implemented'
              - 'main: implemented'
            fossilized_output: false
        - clean-roadmap-llm-insights.ts:
            functions:
              - 'generateFossilId: implemented'
              - 'cleanTaskInsights: implemented'
              - 'addCleaningMetadata: implemented'
              - 'main: implemented'
            fossilized_output: false
        - llm-issue-manager.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-issue-manager.test.ts
        - review-workflow.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/review-workflow.test.ts
        - llm-workflow.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-workflow.test.ts
        - llm-content-automation.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/llm-content-automation.test.ts
        - backup-context.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/backup-context.test.ts
        - simple-monitor.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/simple-monitor.test.ts
        - testing-status.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/testing-status.test.ts
        - monitor-progress.sh:
            functions:
              - 'with: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/monitor-progress.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/monitor-progress.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/monitoring/monitor-progress.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/monitor-progress.integration.test.ts
        - github-projects-integration.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/github-projects-integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/github-projects-integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/github-projects-integration.integration.test.ts
        - timeout-wrapper.sh:
            functions:
              - 'print_status: implemented'
              - 'show_usage: implemented'
              - 'execute_with_timeout: implemented'
              - 'retry_with_timeout: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/timeout-wrapper.test.ts
        - repo-orchestrator.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/repo-orchestrator.test.ts
        - qa-workflow.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/qa-workflow.test.ts
        - batch-commit-orchestrator.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/batch-commit-orchestrator.test.ts
        - test-automation-scripts.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/test-automation-scripts.test.ts
        - audit-shell-scripts.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/audit-shell-scripts.test.ts
        - test-with-monitoring.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/test-with-monitoring.test.ts
        - update-checklist-demo.ts:
            functions:
              - 'createSampleFiles: implemented'
              - 'demoMarkdownUpdate: implemented'
              - 'demoJsonUpdate: implemented'
              - 'demoYamlUpdate: implemented'
              - 'demoBatchUpdate: implemented'
              - 'demoErrorHandling: implemented'
              - 'cleanup: implemented'
              - 'main: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/scripts.e2e.test.ts
        - blog-workflow.sh:
            functions:
              - 'create_new_post: implemented'
              - 'list_posts: implemented'
              - 'publish_post: implemented'
              - 'deploy_to_platform: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/blog-workflow.test.ts
        - fossil-audit.ts:
            functions:
              - 'FossilAuditor: implemented'
              - 'for: implemented'
              - 'parseCLIArgs: implemented'
              - 'showHelp: implemented'
              - 'main: implemented'
            fossilized_output: false
        - performance-insights.sh:
            functions:
              - 'with: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/performance-insights.test.ts
        - analyze-batch-plan.ts:
            functions:
              - 'getStagedFiles: implemented'
              - 'categorizeFile: implemented'
              - 'generateCommitMessage: implemented'
              - 'createBatchPlan: implemented'
              - 'displayBatchPlan: implemented'
              - 'main: implemented'
            fossilized_output: false
        - smart-pre-commit-stabilization.ts:
            functions:
              - 'SmartPreCommitStabilization: implemented'
              - 'main: implemented'
            fossilized_output: false
        - cohesion-improvement.ts:
            functions:
              - 'CohesionAnalyzer: implemented'
              - 'main: implemented'
            fossilized_output: false
        - cleanup-misplaced-outputs.ts:
            functions:
              - 'OutputCleanupOrchestrator: implemented'
              - 'main: implemented'
            fossilized_output: false
        - commit-enhanced-system.ts:
            functions:
              - 'main: implemented'
            fossilized_output: false
        - fossil-summary-md.ts:
            functions:
              - 'main: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/e2e/scripts.e2e.test.ts
        - precommit-unified.ts:
            functions:
              - 'detectOwnerRepo: implemented'
              - 'runStep: implemented'
            fossilized_output: false
        - llm-chat-context.ts:
            functions:
              - 'runTypeScriptCheck: implemented'
              - 'for: implemented'
              - 'runTests: implemented'
              - 'getProjectInfo: implemented'
              - 'getFossilsInfo: implemented'
              - 'getGitChanges: implemented'
              - 'getEnvironmentInfo: implemented'
              - 'generateRecommendations: implemented'
              - 'main: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/llm-chat-context.test.ts
        - monitor-progress.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/monitor-progress.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/automation/monitor-progress.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/monitoring/monitor-progress.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/monitor-progress.integration.test.ts
        - memory-monitor.sh:
            functions:
              - 'to: implemented'
              - 'with: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/monitoring/memory-monitor.test.ts
        - bun-test-safe.sh:
            functions:
              - 'with: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/monitoring/bun-test-safe.test.ts
        - quick-status.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/monitoring/quick-status.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/quick-status.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/monitoring-quick-status.integration.test.ts
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/integration/quick-status.integration.test.ts
        - check-issues.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/monitoring/check-issues.test.ts
        - notify.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/monitoring/notify.test.ts
        - generate-file-footprint.ts:
            functions:
              - 'generateFileFootprint: implemented'
              - 'getGitInfo: implemented'
              - 'getFileInfo: implemented'
              - 'getFileDetails: implemented'
              - 'scanAllFiles: implemented'
              - 'calculateStats: implemented'
              - 'getMachineInfo: implemented'
              - 'generateChecksum: implemented'
              - 'validateFootprint: implemented'
              - 'runFootprintTests: implemented'
              - 'fossilizeFootprint: implemented'
              - 'writeFootprint: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/footprint-system.test.ts
        - canonical-commit.sh:
            functions: []
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/canonical-commit.test.ts
        - test-llm-fossilization.ts:
            functions:
              - 'testLLMFossilization: implemented'
            fossilized_output: false
        - extract-roadmap-insights.ts:
            functions:
              - 'generateMarkdownReport: implemented'
              - 'generateJsonSummary: implemented'
              - 'main: implemented'
            fossilized_output: false
        - manage-blog-branches.sh:
            functions:
              - 'create_blog_branches: implemented'
              - 'switch_to_blog_branch: implemented'
              - 'publish_blog_post: implemented'
              - 'sync_blog_content: implemented'
            fossilized_output: false
            tests:
              - >-
                /Users/emmanuelbarrera/Projects/automate_workloads/tests/unit/scripts/manage-blog-branches.test.ts
        - advanced-fossil-analysis.ts:
            functions:
              - 'calculateSimpleSimilarity: implemented'
              - 'deduplicateFossils: implemented'
            fossilized_output: false
        - publish-project-status.ts:
            functions:
              - 'main: implemented'
            fossilized_output: false
        - automated-monitoring-analysis-refactored.ts:
            functions:
              - 'RefactoredAutomatedMonitoringAnalysis: implemented'
              - 'main: implemented'
            fossilized_output: false
        - detect-hanging-tests.ts:
            functions:
              - 'HangingTestDetector: implemented'
              - 'main: implemented'
            fossilized_output: false
  summary: Auto-generated project status fossil
  overall_summary:
    total_modules: 5
    total_files: 15
    total_functions: 22
    completion_percent: 100
  fossilization_summary:
    fossilized_modules: 5
    fossilized_files: 15
    fossilized_functions: 22
    fossilization_rate: 100
  recommendations:
    - Review CLI module for additional test coverage.
    - Expand fossilization to all utility modules.
    - Increase submodule test coverage.
  developer_summary: >
    Project is in active development. Core, CLI, utils, services, and types
    modules are fossilized and tested. Submodules and new utilities are being
    added for broader coverage.
  cli_details:
    src/core/config.ts:
      usage: bun run src/core/config.ts
      description: Core configuration management. Provides getConfig and setConfig.
    src/core/validation.ts:
      usage: bun run src/core/validation.ts
      description: Validates core configuration.
    src/core/logger.ts:
      usage: bun run src/core/logger.ts
      description: Logging utilities for core module.
    src/core/subcore/helper.ts:
      usage: bun run src/core/subcore/helper.ts
      description: Helper functions for subcore module.
    src/cli/analyze-git-diff.ts:
      usage: bun run src/cli/analyze-git-diff.ts
      description: Analyzes git diffs for fossilization opportunities.
    src/cli/llm-analyze.ts:
      usage: bun run src/cli/llm-analyze.ts
      description: Analyzes LLM outputs and test results.
    src/cli/llm-plan.ts:
      usage: bun run src/cli/llm-plan.ts
      description: Plans LLM test and automation workflows.
    src/utils/checklistUpdater.ts:
      usage: bun run src/utils/checklistUpdater.ts
      description: Updates checklists for fossilization and test coverage.
    src/utils/fossilize.ts:
      usage: bun run src/utils/fossilize.ts
      description: Fossilizes data for traceability.
    src/utils/errorSnapshotLogUtils.ts:
      usage: bun run src/utils/errorSnapshotLogUtils.ts
      description: Logs error snapshots for monitoring.
    src/services/llm.ts:
      usage: bun run src/services/llm.ts
      description: Handles LLM calls and fossilization.
    src/services/github.ts:
      usage: bun run src/services/github.ts
      description: Handles GitHub API calls and issue management.
    src/services/semantic-tagger.ts:
      usage: bun run src/services/semantic-tagger.ts
      description: Generates semantic tags for content.
    src/types/core.ts:
      usage: bun run src/types/core.ts
      description: Defines and validates core types for fossilization.
    src/types/schemas.ts:
      usage: bun run src/types/schemas.ts
      description: Validates schemas for all modules.
    src/types/cli.ts:
      usage: bun run src/types/cli.ts
      description: Defines CLI types and validation.
developer_summary:
  cli:
    - file: src/cli/vscode-ai.ts
      commands:
        - test
        - call
        - process-snapshot
        - list-fossils
        - show-fossil
        - analyze
        - config
      functions: []
      hasTests: false
      testFiles: []
    - file: src/cli/update-checklist.ts
      commands:
        - file
        - batch
        - roadmap
      functions: []
      hasTests: true
      testFiles: *ref_28
    - file: src/cli/llm-snapshot.ts
      commands:
        - export
        - chat
        - docs
        - list
      functions: []
      hasTests: true
      testFiles: *ref_29
    - file: src/cli/create-fossil-issue.ts
      commands: []
      functions: []
      hasTests: false
      testFiles: []
    - file: src/cli/curate-fossil.ts
      commands: []
      functions: []
      hasTests: true
      testFiles: *ref_30
    - file: src/cli/fossilize-validation.ts
      commands: []
      functions:
        - fossilizeValidation
      hasTests: false
      testFiles: []
    - file: src/cli/llm-execute.ts
      commands: []
      functions: []
      hasTests: false
      testFiles: []
    - file: src/cli/track-progress.ts
      commands:
        - track
        - status
      functions:
        - ProgressTrackingService
      hasTests: false
      testFiles: []
    - file: src/cli/timestamp-filter.ts
      commands: []
      functions:
        - main
      hasTests: false
      testFiles: []
    - file: src/cli/fossil-summary.ts
      commands: []
      functions:
        - updateFossilSummary
      hasTests: true
      testFiles: *ref_31
    - file: src/cli/issues-create.ts
      commands: []
      functions:
        - runIssuesCreate
      hasTests: true
      testFiles: *ref_32
    - file: src/cli/github-issues.ts
      commands: []
      functions:
        - detectOwnerRepo
        - showHelp
        - main
      hasTests: true
      testFiles: *ref_33
    - file: src/cli/git-history-insights.ts
      commands: []
      functions:
        - GitHistoryInsightsCLI
      hasTests: false
      testFiles: []
    - file: src/cli/issues-fossilize.ts
      commands: []
      functions:
        - main
      hasTests: false
      testFiles: []
    - file: src/cli/githubFossilSyncCore.ts
      commands: []
      functions:
        - githubFossilSync
      hasTests: false
      testFiles: []
    - file: src/cli/context-fossil.ts
      commands:
        - init
        - add
        - query
        - get
        - update
        - export
        - stats
        - summary
        - cleanup
        - enhance
        - list
      functions:
        - ContextFossilService
      hasTests: true
      testFiles: *ref_34
    - file: src/cli/llm-plan.ts
      commands:
        - decompose
        - prioritize
        - generate-content
        - generate-tests
        - review-comments
      functions:
        - LLMPlanningService
        - findShellScripts
        - for
      hasTests: true
      testFiles: *ref_35
    - file: src/cli/llm-usage.ts
      commands:
        - report
        - config
        - analyze-waste
        - test-local
        - clean
        - export
        - setup-monitoring
        - analyze-patterns
      functions:
        - monitorUsage
      hasTests: true
      testFiles: *ref_36
    - file: src/cli/llm-analyze.ts
      commands: []
      functions: []
      hasTests: false
      testFiles: []
    - file: src/cli/validate-plan.ts
      commands:
        - validate
        - batch
        - create-expected
      functions: []
      hasTests: false
      testFiles: []
    - file: src/cli/performance-monitor.ts
      commands:
        - batch
        - summary
        - report
        - insights
        - clean
        - list
      functions:
        - PerformanceMonitorCLI
      hasTests: true
      testFiles: *ref_37
    - file: src/cli/canonical-fossil-manager.ts
      commands:
        - update-validation
        - update-performance
        - generate-yaml
        - git-diff-analysis
      functions:
        - CanonicalFossilManager
        - detectOwnerRepo
      hasTests: false
      testFiles: []
    - file: src/cli/analyze-git-diff.ts
      commands: []
      functions:
        - detectOwnerRepo
        - showHelp
        - main
        - displayAnalysisResults
        - displayBatchResults
      hasTests: false
      testFiles: []
    - file: src/cli/git-diff-fossil-analyzer.ts
      commands: []
      functions:
        - GitDiffFossilAnalyzer
        - detectOwnerRepo
        - main
      hasTests: false
      testFiles: []
    - file: src/cli/automate-github-fossils.ts
      commands:
        - create
        - validate
      functions:
        - detectOwnerRepo
      hasTests: true
      testFiles: *ref_38
    - file: src/cli/validate-types-schemas.ts
      commands: []
      functions:
        - validateSchemaFiles
        - validateCohesion
        - extractImports
        - extractSchemaNames
        - detectCircularDependency
        - dfs
        - generateSummary
        - outputResults
      hasTests: false
      testFiles: []
    - file: src/cli/llm-predictive-monitoring.ts
      commands:
        - monitor-before-call
        - analyze-monitoring
        - generate-report
        - demo
      functions: []
      hasTests: false
      testFiles: []
    - file: src/cli/ensure-demo-issue.ts
      commands: []
      functions:
        - main
      hasTests: false
      testFiles: []
    - file: src/cli/gather-context.ts
      commands:
        - gather
      functions:
        - ContextGatheringService
      hasTests: true
      testFiles: *ref_39
    - file: src/cli/fossil-audit.ts
      commands: []
      functions:
        - fossilAuditCLI
        - parseCLIArgs
        - showHelp
      hasTests: false
      testFiles: []
    - file: src/cli/sync-tracker.ts
      commands:
        - sync-tracker
      functions: []
      hasTests: false
      testFiles: []
    - file: src/cli/llm-chat-context.ts
      commands: []
      functions:
        - main
      hasTests: true
      testFiles: *ref_40
    - file: src/cli/fossilize-performance.ts
      commands: []
      functions:
        - fossilizePerformance
      hasTests: false
      testFiles: []
    - file: src/cli/repo-orchestrator.ts
      commands:
        - orchestrate
        - analyze
        - fossilize
      functions:
        - RepoOrchestratorService
        - isTestMode
        - ensureLabelExists
        - addLabelToIssue
        - loadAutomationIssueTemplate
        - getInvocation
        - fossilizeEntry
      hasTests: true
      testFiles: *ref_41
    - file: src/cli/event-loop-monitor.ts
      commands:
        - start
        - stack
        - report
        - stop
      functions:
        - EventLoopMonitorCLI
      hasTests: false
      testFiles: []
    - file: src/cli/error-snapshot-log.ts
      commands: []
      functions: []
      hasTests: true
      testFiles: *ref_42
  utils:
    - file: src/utils/eventLoopMonitor.ts
      functions:
        - EventLoopMonitor
        - call
        - getEventLoopMonitor
        - startGlobalMonitoring
        - stopGlobalMonitoring
        - trackOperation
        - getCallStackSummary
        - exportMonitoringData
        - generateMonitoringReport
      hasTests: false
      testFiles: []
    - file: src/utils/llmFossilManagerFactory.ts
      functions:
        - createLLMFossilManagerFactory
      hasTests: false
      testFiles: []
    - file: src/utils/timeout-time-integration.ts
      functions:
        - executeWithTimeoutAndTime
        - executeWithTimeCommand
        - executeWithStandardTimeout
        - executeCommandWithTimeoutAndTime
        - demonstrateTimeoutTimeIntegration
      hasTests: true
      testFiles: *ref_43
    - file: src/utils/roadmapInsightsAccessor.ts
      functions:
        - generateTaskId
        - loadInsightsCollection
        - saveInsightsCollection
        - findTaskInsights
        - findTaskInsightsByTitle
        - getTaskInsights
        - getInsightsByStatus
        - getInsightsByTag
        - getInsightsByOwner
        - getInsightsByMilestone
        - getHighImpactInsights
        - getInsightsWithBlockers
        - getCompletedTaskInsights
        - getInProgressTaskInsights
        - getPlannedTaskInsights
        - getPendingTaskInsights
        - getInsightsWithDeadlines
        - getInsightsByCategory
        - getInsightsSummary
      hasTests: false
      testFiles: []
    - file: src/utils/simpleTestMonitor.ts
      functions:
        - SimpleTestMonitor
        - startSimpleTestMonitoring
        - stopSimpleTestMonitoring
        - trackSimpleTest
        - isSimpleTestMonitoringActive
        - getSimpleTestResults
        - getSimpleTestSummary
      hasTests: true
      testFiles: *ref_44
    - file: src/utils/llmFossilManager.ts
      functions:
        - LLMFossilManager
        - for
        - createLLMFossilManager
        - for
        - fossilizeLLMInsight
      hasTests: false
      testFiles: []
    - file: src/utils/json.ts
      functions:
        - parseJsonSafe
      hasTests: true
      testFiles: *ref_45
    - file: src/utils/performanceMonitor.ts
      functions:
        - PerformanceMonitor
        - runPerformanceMonitorCLI
      hasTests: false
      testFiles: []
    - file: src/utils/roadmapInsightsExtractor.ts
      functions:
        - generateTaskId
        - generateFossilId
        - createRoadmapInsightsCollection
        - createRoadmapInsightsWebPublication
        - generateInsightsMarkdownReport
        - saveInsightsOutputs
      hasTests: false
      testFiles: []
    - file: src/utils/fossilIssue.ts
      functions:
        - IssueBodyFileManager
        - GitHubIssueManager
        - IssueFossilManager
        - toSectionLabel
        - ensureLabel
        - generateAutomationIssueBody
        - createFossilIssue
      hasTests: true
      testFiles: *ref_46
    - file: src/utils/syncTracker.ts
      functions:
        - runGh
        - getMilestoneIdByTitle
        - ensureMilestone
        - getIssueByTitle
        - ensureIssue
        - addIssueToProject
        - closeIssueByTitle
        - ensureTestOrFossilIssue
        - syncTrackerWithGitHub
      hasTests: false
      testFiles: []
    - file: src/utils/roadmapToMarkdown.ts
      functions:
        - roadmapToMarkdown
      hasTests: false
      testFiles: []
    - file: src/utils/errorSnapshotLogUtils.ts
      functions:
        - createError
        - createSnapshotFossil
        - calculatePerformanceMetrics
        - createLogAnalysisFossil
        - generateContextSuggestions
        - createErrorFossil
      hasTests: true
      testFiles: *ref_47
    - file: src/utils/fileFilters.ts
      functions:
        - isRelevantSourceFile
      hasTests: false
      testFiles: []
    - file: src/utils/visualDiagramGenerator.ts
      functions:
        - generateWorkflowDiagram
        - generateArchitectureDiagram
        - generateDependencyDiagram
        - generateRiskDiagram
        - generateSequenceDiagram
        - generateProgressDiagram
        - generateSystemOverviewDiagram
        - generateDecisionTreeDiagram
        - generateVisualIssueBody
        - generateVisualFossilPublication
        - shouldIncludeVisuals
        - extractVisualContext
      hasTests: false
      testFiles: []
    - file: src/utils/memoryMonitorUtils.ts
      functions:
        - getSystemMemoryInfo
        - getProcessGroupMemory
        - getProcessGroupDetails
        - createMemorySnapshot
        - logMemorySnapshot
        - createMemoryMonitoringFossil
        - saveMemoryMonitoringFossil
        - loadMemoryMonitoringFossil
        - createMemoryMonitoringSummary
        - getCurrentProcessMemoryMB
        - isProcessRunning
        - sleep
      hasTests: false
      testFiles: []
    - file: src/utils/llmInputValidator.ts
      functions:
        - LLMInputValidator
        - for
        - validateLLMInput
        - for
        - preprocessLLMInput
        - for
        - analyzeLLMContentQuality
      hasTests: true
      testFiles: *ref_48
    - file: src/utils/githubFossilManager.ts
      functions:
        - GitHubFossilManager
      hasTests: false
      testFiles: []
    - file: src/utils/fossilLabel.ts
      functions:
        - createFossilLabel
        - ensureLabel
      hasTests: false
      testFiles: []
    - file: src/utils/fossilMilestone.ts
      functions:
        - createFossilMilestone
        - ensureMilestone
      hasTests: false
      testFiles: []
    - file: src/utils/llmSnapshotExporter.ts
      functions:
        - LLMSnapshotExporter
        - exportLLMSnapshot
        - exportForChat
      hasTests: false
      testFiles: []
    - file: src/utils/cli.ts
      functions:
        - executeCommand
        - executeCommandJSON
        - safeParseJSON
        - isCommandAvailable
        - executeCommandWithRetry
        - formatOutput
        - createServiceResponse
        - issueExists
        - getCurrentRepoOwner
        - getCurrentRepoName
        - getCurrentRepoInfo
        - noop
        - analyzeFileDependencies
        - resolveImportPath
        - resolveAliasPath
        - createDependencyAwareBatches
        - topologicalSort
        - visit
      hasTests: true
      testFiles: *ref_49
    - file: src/utils/gitDiffAnalyzer.ts
      functions:
        - GitDiffAnalyzer
      hasTests: false
      testFiles: []
    - file: src/utils/markdownChecklist.ts
      functions:
        - updateMarkdownChecklist
        - extractJsonBlock
        - checklistToMarkdown
        - metadataToMarkdown
      hasTests: true
      testFiles: *ref_50
    - file: src/utils/yamlToJson.ts
      functions:
        - yamlToJson
      hasTests: false
      testFiles: []
    - file: src/utils/fossilManager.ts
      functions:
        - FossilManager
        - createFossilManager
        - for
        - createFossilIssue
        - for
        - createFossilLabel
        - for
        - createFossilMilestone
      hasTests: false
      testFiles: []
    - file: src/utils/fossilize.ts
      functions:
        - generateContentHash
        - generateId
        - toFossilEntry
        - outputFossil
        - writeFossilToFile
        - ensureFossilDir
        - fossilizeLLMInsight
        - fossilizeLLMBenchmark
        - fossilizeLLMDiscovery
      hasTests: true
      testFiles: *ref_51
    - file: src/utils/timeout.ts
      functions:
        - with
        - withTimeout
        - executeWithTimeout
        - executeWithTimeCommand
        - executeShellWithTimeout
        - executeShellWithTimeCommand
        - delay
        - retryWithTimeout
        - allWithTimeout
        - raceWithTimeout
        - executeCommandWithTimeAndTimeout
      hasTests: true
      testFiles: *ref_52
    - file: src/utils/testMonitor.ts
      functions:
        - TestMonitor
        - getTestMonitor
        - startTestMonitoring
        - stopTestMonitoring
        - monitorTest
        - hasHangingTests
        - getHangingTests
        - getTestMonitoringStatus
        - generateTestStatusReport
      hasTests: true
      testFiles: *ref_53
    - file: src/utils/performanceTracker.ts
      functions:
        - PerformanceTracker
        - runPerformanceTrackerCLI
      hasTests: false
      testFiles: []
    - file: src/utils/typeSchemaValidator.ts
      functions:
        - TypeSchemaValidator
        - methods
        - methods
        - methods
        - body
        - missing
        - blocks
        - runTypeSchemaValidation
      hasTests: false
      testFiles: []
    - file: src/utils/index.ts
      functions:
        - for
        - for
      hasTests: true
      testFiles: *ref_54
    - file: src/utils/consolidated-utilities.ts
      functions:
        - yamlToJson
      hasTests: false
      testFiles: []
    - file: src/utils/timestampFilter.ts
      functions:
        - TimestampFilter
        - main
      hasTests: false
      testFiles: []
    - file: src/utils/checklistUpdater.ts
      functions:
        - detectFileType
        - createBackup
        - updateMarkdownChecklistFile
        - updateJsonChecklistFile
        - updateYamlChecklistFile
        - updateRoadmapTasks
        - updateChecklistArray
        - to
        - updateChecklistFile
        - updateMultipleChecklistFiles
        - parseChecklistUpdates
        - generateUpdateReport
      hasTests: true
      testFiles: *ref_55
    - file: src/utils/githubCliCommands.ts
      functions:
        - GitHubCLICommands
      hasTests: false
      testFiles: []
    - file: src/utils/curateFossil.ts
      functions:
        - curateAndCheck
      hasTests: false
      testFiles: []
    - file: src/utils/issueMigrationUtils.ts
      functions:
        - parseLegacySections
        - buildModernBody
      hasTests: false
      testFiles: []
    - file: src/utils/canonical-test-fossil-manager.ts
      functions:
        - CanonicalTestFossilManager
      hasTests: false
      testFiles: []
    - file: src/utils/fossilSummary.ts
      functions:
        - getFossilSummary
      hasTests: false
      testFiles: []
    - file: src/utils/plan-validator.ts
      functions:
        - PlanValidator
      hasTests: false
      testFiles: []
  services:
    - file: src/services/llmPredictiveMonitoring.ts
      functions:
        - LLMPredictiveMonitoringService
        - to
        - createPredictiveMonitoringService
        - for
        - monitorBeforeLLMCall
      hasTests: false
      testFiles: []
    - file: src/services/semantic-tagger.ts
      functions:
        - SemanticTaggerService
      hasTests: true
      testFiles: *ref_56
    - file: src/services/github.ts
      functions:
        - for
        - GitHubService
        - loadAndFillAutomationTemplate
      hasTests: true
      testFiles: *ref_57
    - file: src/services/llm.ts
      functions:
        - LLMService
        - callOpenAIChat
      hasTests: true
      testFiles: *ref_58
    - file: src/services/llmEnhanced.ts
      functions:
        - EnhancedLLMService
        - for
        - createEnhancedLLMService
        - for
        - callLLMEnhanced
        - for
        - analyzeLLMInput
      hasTests: false
      testFiles: []
    - file: src/services/index.ts
      functions: []
      hasTests: true
      testFiles: *ref_59
    - file: src/services/vscodeAI.ts
      functions:
        - VSCodeAIService
        - to
        - createVSCodeAIService
        - for
        - callVSCodeAI
        - for
        - processSnapshotWithVSCodeAI
      hasTests: false
      testFiles: []
  examples: []
  summary:
    totalCLI: 36
    totalUtils: 41
    totalServices: 7
    totalExamples: 0
    testedCLI: 15
    testedUtils: 13
    testedServices: 4
    coverage: 38
  recommendations:
    - 'Priority 1: Test CLI commands'
    - '- src/cli/vscode-ai.ts (7 commands)'
    - '- src/cli/create-fossil-issue.ts (0 commands)'
    - '- src/cli/fossilize-validation.ts (0 commands)'
    - 'Priority 2: Test utility functions'
    - '- src/utils/eventLoopMonitor.ts (9 functions)'
    - '- src/utils/llmFossilManagerFactory.ts (1 functions)'
    - '- src/utils/roadmapInsightsAccessor.ts (19 functions)'
    - 'Priority 3: Test services'
    - '- src/services/llmPredictiveMonitoring.ts (5 functions)'
    - '- src/services/llmEnhanced.ts (7 functions)'
    - '- src/services/vscodeAI.ts (7 functions)'
