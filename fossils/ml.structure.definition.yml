# ============================================================================
# CANONICAL FOSSIL STRUCTURE DEFINITION
# ============================================================================
# This file defines the purpose, ML usage, internal value, and workflow role
# for each canonical fossil file in the unified automation ecosystem.
# 
# Pattern: Each file serves a specific purpose in the ML-driven automation
# workflow, with clear internal value and integration points.
# ============================================================================

type: "canonical_structure_definition"
source: "unified_automation_ecosystem"
createdBy: "llm-human-collab"
createdAt: "2025-07-06T10:10:00.000Z"
version: "1.0.0"
canonical: true
purpose: "Define canonical fossil structure and usage patterns for ML automation"

# ============================================================================
# CANONICAL FILES DEFINITION
# ============================================================================

canonical_files:
  project_status.yml:
    purpose: "Core project state and module tracking for automation"
    ml_usage: 
      - "Training data for project health prediction models"
      - "Input for ML-driven automation decision making"
      - "Pattern recognition for project evolution trends"
    internal_value: 
      - "Single source of truth for project status across all automation"
      - "Enables consistent state management in ML workflows"
      - "Provides baseline for regression detection and quality metrics"
    workflow_role: 
      - "Input for ML insights generation"
      - "Baseline for automation decisions"
      - "Reference for pre-commit validation"
    schema_validation: "ProjectStatusSchema"
    update_frequency: "on_commit"
    transversal_value: 0.9

  roadmap.yml:
    purpose: "E2E automation roadmap and task tracking for ML optimization"
    ml_usage:
      - "Task completion prediction and optimization models"
      - "Resource allocation and priority learning"
      - "Automation scope expansion recommendations"
    internal_value:
      - "Drives automated GitHub issue/milestone creation"
      - "Guides ML-powered task prioritization"
      - "Enables predictive automation planning"
    workflow_role:
      - "Guides GitHub automation and progress tracking"
      - "Input for LLM planning and decision making"
      - "Reference for transversal fossil generation"
    schema_validation: "E2ERoadmapSchema"
    update_frequency: "on_roadmap_change"
    transversal_value: 0.8

  setup_status.yml:
    purpose: "Dependency and environment tracking for reproducible automation"
    ml_usage:
      - "Setup success prediction and troubleshooting models"
      - "Environment compatibility analysis"
      - "Dependency conflict detection"
    internal_value:
      - "Ensures reproducible development environment"
      - "Prevents automation failures due to missing dependencies"
      - "Enables automated onboarding and CI setup"
    workflow_role:
      - "Pre-commit validation and onboarding"
      - "CI environment verification"
      - "Dependency health monitoring"
    schema_validation: "SetupStatusSchema"
    update_frequency: "on_setup_change"
    transversal_value: 0.7

  traceability.json:
    purpose: "Git diff analysis and commit insights for ML pattern recognition"
    ml_usage:
      - "Commit pattern analysis and risk assessment"
      - "Code change impact prediction"
      - "Developer behavior modeling"
    internal_value:
      - "Links code changes to fossil updates"
      - "Provides retrospective traceability for ML training"
      - "Enables automated commit message enhancement"
    workflow_role:
      - "Enhanced commit message validation"
      - "ML training data generation"
      - "Automated documentation updates"
    schema_validation: "TraceabilitySchema"
    update_frequency: "on_commit"
    transversal_value: 0.6

  migration_report.json:
    purpose: "Migration history and canonical fossil evolution tracking"
    ml_usage:
      - "Migration success prediction"
      - "Pattern learning for future migrations"
      - "Risk assessment for structural changes"
    internal_value:
      - "Documents canonical fossil evolution"
      - "Provides audit trail for structural changes"
      - "Enables rollback and recovery procedures"
    workflow_role:
      - "Migration planning and execution"
      - "Audit trail maintenance"
      - "Structural change validation"
    schema_validation: "MigrationReportSchema"
    update_frequency: "on_migration"
    transversal_value: 0.5

  coverage_report.json:
    purpose: "Canonical coverage statistics and quality metrics"
    ml_usage:
      - "Coverage trend analysis and prediction"
      - "Quality metric optimization"
      - "Gap identification and prioritization"
    internal_value:
      - "Tracks canonical fossil adoption and coverage"
      - "Provides quality metrics for ML training"
      - "Enables automated gap detection and filling"
    workflow_role:
      - "Quality assurance and monitoring"
      - "Coverage improvement automation"
      - "ML model performance tracking"
    schema_validation: "CoverageReportSchema"
    update_frequency: "on_validation"
    transversal_value: 0.4

# ============================================================================
# FOLDER STRUCTURE DEFINITION
# ============================================================================

folder_structure:
  fossils/:
    description: "Unified canonical fossil directory - single source of truth"
    pattern: "All canonical fossils in root, no nested canonical/ subdirectory"
    ml_integration: "Direct access for ML models and automation"
    workflow_integration: "Primary input for all automation workflows"
    
    # Archive structure for historical fossils
    archive/:
      description: "Historical fossils organized by date for ML training"
      pattern: "YYYY/MM/fossil-name-timestamp.json"
      ml_usage: "Training data for historical pattern analysis"
      retention_policy: "Keep last 12 months for ML training"
    
    # Tests structure for standardized test fossils
    tests/:
      description: "Standardized test fossils with consistent naming patterns"
      pattern: "[topics_tested].yml|json|md (e.g., integration_tests.yml, unit_tests.json, performance_tests.md)"
      ml_usage: "Test result analysis and trend prediction"
      workflow_role: "Test result tracking and quality assurance"
      canonical: true
      
    # Analysis structure for ML insights
    analysis/:
      description: "ML-generated analysis and insights"
      pattern: "analysis-type-timestamp.json"
      ml_usage: "Stores ML analysis results and insights"
      workflow_role: "Input for decision making and automation"

# ============================================================================
# ML WORKFLOW INTEGRATION
# ============================================================================

ml_workflow_integration:
  pre_commit_validation:
    input_files: ["project_status.yml", "roadmap.yml", "setup_status.yml"]
    ml_models: ["health_prediction", "risk_assessment", "quality_metrics"]
    output: "validation_results.json"
    
  commit_enhancement:
    input_files: ["traceability.json", "project_status.yml"]
    ml_models: ["commit_pattern_analysis", "message_enhancement"]
    output: "enhanced_commit_message"
    
  automation_decision:
    input_files: ["roadmap.yml", "project_status.yml", "coverage_report.json"]
    ml_models: ["task_prioritization", "resource_allocation"]
    output: "automation_actions.json"

# ============================================================================
# SCHEMA VALIDATION PATTERNS
# ============================================================================

schema_validation_patterns:
  required_fields:
    - "type"
    - "source" 
    - "createdBy"
    - "createdAt"
    - "canonical"
    - "purpose"
    - "transversal_value"
  
  ml_ready_fields:
    - "metadata.ml_usage"
    - "metadata.internal_value"
    - "metadata.workflow_role"
    - "metadata.schema_validation"
    - "metadata.update_frequency"

# ============================================================================
# METADATA
# ============================================================================

metadata:
  fossilized: true
  canonical: true
  version: "1.0.0"
  createdBy: "llm-human-collab"
  createdAt: "2025-07-06T10:10:00.000Z"
  purpose: "Define canonical fossil structure and usage patterns for ML automation"
  transversal_value: 0.9
  ml_usage: "Structure definition for ML model training and automation workflows"
  internal_value: "Single source of truth for canonical fossil organization and usage"
  workflow_role: "Reference for all automation and ML workflows"
  schema_validation: "StructureDefinitionSchema"
  update_frequency: "on_structure_change"

# ============================================================================
# CANONICAL FOSSILS DEFINITION
# ============================================================================

canonical_fossils:
  # Core Project Fossils
  roadmap:
    filename: "roadmap.yml"
    purpose: "Project roadmap with tasks, milestones, and progress tracking"
    ml_usage: "Training data for project planning, task prioritization, and progress prediction"
    internal_value: "Single source of truth for project direction and team coordination"
    canonical: true
    type: "project_planning"
    
  project_status:
    filename: "project_status.yml"
    purpose: "Current status of all project components and functions"
    ml_usage: "Status analysis, completion prediction, and bottleneck identification"
    internal_value: "Real-time project health monitoring and resource allocation"
    canonical: true
    type: "status_tracking"
    
  traceability:
    filename: "traceability.json"
    purpose: "Git commit analysis and change traceability"
    ml_usage: "Change impact analysis, developer behavior patterns, and code evolution tracking"
    internal_value: "Audit trail for all changes and decision-making history"
    canonical: true
    type: "audit_trail"
    
  # GitHub Object Fossils
  github_issues:
    filename: "github_issues.json"
    purpose: "Fossilized GitHub issues with metadata and relationships"
    ml_usage: "Issue classification, priority prediction, and resolution time estimation"
    internal_value: "Centralized issue tracking with deduplication and traceability"
    canonical: true
    type: "github_objects"
    
  github_labels:
    filename: "github_labels.json"
    purpose: "Fossilized GitHub labels with color and description metadata"
    ml_usage: "Label usage patterns, categorization optimization, and workflow analysis"
    internal_value: "Consistent labeling strategy and automated categorization"
    canonical: true
    type: "github_objects"
    
  github_milestones:
    filename: "github_milestones.json"
    purpose: "Fossilized GitHub milestones with progress and deadline tracking"
    ml_usage: "Milestone completion prediction, timeline optimization, and resource planning"
    internal_value: "Release planning and project timeline management"
    canonical: true
    type: "github_objects"
    
  github_pull_requests:
    filename: "github_pull_requests.json"
    purpose: "Fossilized GitHub pull requests with review status and merge history"
    ml_usage: "PR review time prediction, merge conflict detection, and code quality assessment"
    internal_value: "Code review workflow optimization and merge strategy planning"
    canonical: true
    type: "github_objects"
    
  github_releases:
    filename: "github_releases.json"
    purpose: "Fossilized GitHub releases with changelog and version metadata"
    ml_usage: "Release timing optimization, changelog generation, and version compatibility analysis"
    internal_value: "Release management automation and version control strategy"
    canonical: true
    type: "github_objects"
    
  github_discussions:
    filename: "github_discussions.json"
    purpose: "Fossilized GitHub discussions with community engagement metrics"
    ml_usage: "Community sentiment analysis, discussion topic clustering, and engagement optimization"
    internal_value: "Community management and knowledge base curation"
    canonical: true
    type: "github_objects"
    
  github_projects:
    filename: "github_projects.json"
    purpose: "Fossilized GitHub project boards with workflow and task organization"
    ml_usage: "Project workflow optimization, task dependency analysis, and team productivity tracking"
    internal_value: "Project management automation and workflow standardization"
    canonical: true
    type: "github_objects"
    
  # Analysis Fossils
  analysis_summary:
    filename: "analysis_summary.json"
    purpose: "Comprehensive project analysis with metrics and insights"
    ml_usage: "Project health scoring, trend analysis, and improvement recommendations"
    internal_value: "Data-driven decision making and continuous improvement"
    canonical: true
    type: "analysis"
    
  performance_metrics:
    filename: "performance_metrics.json"
    purpose: "Performance benchmarks and optimization tracking"
    ml_usage: "Performance regression detection, optimization opportunity identification, and resource planning"
    internal_value: "Performance monitoring and optimization strategy"
    canonical: true
    type: "analysis"
    
  # Context Fossils
  yaml_context:
    filename: "yaml_context.yml"
    purpose: "Human-LLM chat context with project state and metadata"
    ml_usage: "Context-aware LLM interactions, project state understanding, and decision support"
    internal_value: "Enhanced LLM productivity and project knowledge sharing"
    canonical: true
    type: "context"
    
  github_objects_context:
    filename: "github_objects_context.yml"
    purpose: "GitHub objects summary for LLM context and automation"
    ml_usage: "GitHub workflow automation, object relationship analysis, and cross-repository insights"
    internal_value: "Unified GitHub object management and automation orchestration"
    canonical: true
    type: "context"

# ============================================================================
# DIRECTORY STRUCTURE DEFINITION
# ============================================================================

directories:
  fossils:
    description: "Root directory for all canonical fossils"
    subdirectories:
      analysis:
        description: "Analysis and metrics fossils"
        files: ["analysis_summary.json", "performance_metrics.json"]
      context:
        description: "Context fossils for LLM and automation"
        files: ["yaml_context.yml", "github_objects_context.yml"]
      github:
        description: "GitHub object fossils"
        files: ["github_issues.json", "github_labels.json", "github_milestones.json", "github_pull_requests.json", "github_releases.json", "github_discussions.json", "github_projects.json"]
      core:
        description: "Core project fossils"
        files: ["roadmap.yml", "project_status.yml", "traceability.json"]

# ============================================================================
# CANONICAL FOSSIL WORKFLOW DEFINITION
# ============================================================================

workflow:
  creation:
    pattern: "All fossils created via canonical fossil manager"
    validation: "Pre-commit validation ensures canonical compliance"
    metadata: "All fossils include canonical: true and type metadata"
  
  updates:
    pattern: "Stable filenames with version archiving"
    archival: "Previous versions archived with timestamps"
    traceability: "All changes tracked in traceability fossil"
  
  integration:
    ml_ready: "All fossils structured for ML consumption"
    yaml_context: "Context fossils generated for human-LLM chat"
    pre_commit: "Unified validation ensures consistency"

# ============================================================================
# BENEFITS DEFINITION
# ============================================================================

benefits:
  unified_pattern: "Consistent fossil structure across all object types"
  ml_integration: "All fossils optimized for machine learning workflows"
  traceability: "Complete audit trail for all project changes"
  deduplication: "Prevents duplicate objects and maintains data integrity"
  automation: "Enables comprehensive automation and orchestration"
  collaboration: "Standardized approach for team collaboration" 