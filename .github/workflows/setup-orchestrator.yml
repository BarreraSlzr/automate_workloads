name: Setup Repository Orchestrator

on:
  workflow_dispatch:
    # Allow manual triggering
  push:
    branches: [ master, main ]
    paths:
      - '.github/workflows/setup-orchestrator.yml'
      - 'src/cli/repo-orchestrator.ts'

env:
  NODE_VERSION: '18'
  BUN_VERSION: 'latest'

jobs:
  setup:
    name: 🛠️ Setup Repository for Orchestrator
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🟡 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: 📦 Install dependencies
        run: |
          bun install
          echo "✅ Dependencies installed"

      - name: 🏷️ Create required labels
        run: |
          echo "🏷️ Creating required labels for repository orchestrator..."
          
          # Define required labels
          declare -A labels=(
            ["automation"]="0052CC"
            ["orchestration"]="1D76DB"
            ["summary"]="0E8A16"
            ["enhancement"]="84B6EB"
            ["documentation"]="0075CA"
            ["workflow"]="D93F0B"
            ["monitoring"]="5319E7"
            ["optimization"]="FEF2C0"
            ["health-check"]="D4C5F9"
            ["llm-powered"]="FF9500"
          )
          
          # Create each label
          for label in "${!labels[@]}"; do
            color="${labels[$label]}"
            echo "Creating label: $label (color: $color)"
            
            # Check if label exists
            if gh api repos/${{ github.repository }}/labels/$label >/dev/null 2>&1; then
              echo "✅ Label '$label' already exists"
            else
              # Create label
              gh api repos/${{ github.repository }}/labels \
                --field name="$label" \
                --field color="$color" \
                --field description="Generated by Repository Orchestrator"
              echo "✅ Created label: $label"
            fi
          done

      - name: 📋 Create issue templates
        run: |
          echo "📋 Creating issue templates for automation..."
          
          # Create .github/ISSUE_TEMPLATE directory
          mkdir -p .github/ISSUE_TEMPLATE
          
          # Automation issue template
          cat > .github/ISSUE_TEMPLATE/automation.yml << 'EOF'
          name: 🤖 Automation Request
          description: Request automation improvements for this repository
          title: "[AUTOMATION] "
          labels: ["automation", "enhancement"]
          body:
            - type: markdown
              attributes:
                value: |
                  ## 🤖 Automation Request
                  
                  Use this template to request automation improvements for this repository.
            - type: textarea
              id: automation-type
              attributes:
                label: Type of Automation
                description: What type of automation are you requesting?
                placeholder: e.g., CI/CD, testing, deployment, monitoring, documentation
              validations:
                required: true
            - type: textarea
              id: description
              attributes:
                label: Description
                description: Describe the automation you'd like to implement
                placeholder: Provide a detailed description of the automation request
              validations:
                required: true
            - type: textarea
              id: benefits
              attributes:
                label: Expected Benefits
                description: What benefits will this automation provide?
                placeholder: e.g., faster deployments, reduced manual work, improved quality
            - type: textarea
              id: priority
              attributes:
                label: Priority
                description: How urgent is this automation request?
                placeholder: High/Medium/Low
            - type: textarea
              id: additional-context
              attributes:
                label: Additional Context
                description: Any additional information that might be helpful
                placeholder: Current workflow, constraints, team size, etc.
          EOF
          
          # Orchestration summary template
          cat > .github/ISSUE_TEMPLATE/orchestration-summary.yml << 'EOF'
          name: 📊 Orchestration Summary
          description: Summary of repository orchestration results
          title: "🤖 Repository Orchestration Summary - "
          labels: ["orchestration", "summary"]
          body:
            - type: markdown
              attributes:
                value: |
                  ## 📊 Repository Orchestration Summary
                  
                  This issue contains the results of automated repository orchestration.
            - type: textarea
              id: health-score
              attributes:
                label: Health Score
                description: Repository health score (0-100)
                placeholder: e.g., 85
            - type: textarea
              id: analysis-date
              attributes:
                label: Analysis Date
                description: When was this analysis performed?
                placeholder: YYYY-MM-DD HH:MM UTC
            - type: textarea
              id: orchestration-steps
              attributes:
                label: Orchestration Steps Completed
                description: Which orchestration steps were completed?
                placeholder: Analysis, Planning, Execution, Monitoring
            - type: textarea
              id: key-metrics
              attributes:
                label: Key Metrics
                description: Important metrics from the orchestration
                placeholder: Issues created, PRs created, alerts generated
            - type: textarea
              id: next-steps
              attributes:
                label: Next Steps
                description: Recommended next actions
                placeholder: Review issues, implement recommendations, etc.
            - type: textarea
              id: generated-files
              attributes:
                label: Generated Files
                description: Files generated during orchestration
                placeholder: analysis.json, plan.json, execution.json, monitoring.json
          EOF
          
          echo "✅ Issue templates created"

      - name: 📁 Create workflow documentation
        run: |
          echo "📁 Creating workflow documentation..."
          
          # Create workflows documentation
          mkdir -p .github/workflows/docs
          
          cat > .github/workflows/docs/README.md << 'EOF'
          # GitHub Workflows Documentation
          
          This directory contains documentation for the automated workflows in this repository.
          
          ## 🤖 Repository Orchestrator Workflows
          
          ### 1. Repository Workflow Orchestrator (`repository-orchestrator.yml`)
          
          **Purpose:** Automatically analyze, plan, execute, and monitor repository improvements
          
          **Triggers:**
          - Scheduled: Every Monday at 9 AM UTC
          - Manual: Via workflow dispatch
          - Push: When orchestrator files change
          - Pull Request: On PR to main/master
          
          **Steps:**
          1. **Repository Analysis** - Assess health and identify opportunities
          2. **LLM-Powered Planning** - Generate improvement strategies
          3. **Automation Execution** - Create issues and implement improvements
          4. **Monitoring & Optimization** - Track performance and identify optimizations
          5. **Summary Creation** - Generate comprehensive reports and issues
          
          **Outputs:**
          - Health score assessment
          - Automation issues created
          - Detailed reports and artifacts
          - Summary issues with recommendations
          
          ### 2. Setup Orchestrator (`setup-orchestrator.yml`)
          
          **Purpose:** Prepare repository with necessary labels and templates
          
          **Triggers:**
          - Manual: Via workflow dispatch
          - Push: When setup files change
          
          **Steps:**
          1. **Create Labels** - Set up required labels for automation
          2. **Issue Templates** - Create templates for automation requests
          3. **Documentation** - Generate workflow documentation
          
          ## 🎯 Usage
          
          ### Manual Orchestration
          
          ```bash
          # Trigger full orchestration
          gh workflow run repository-orchestrator.yml
          
          # Setup repository
          gh workflow run setup-orchestrator.yml
          ```
          
          ### Local Orchestration
          
          ```bash
          # Analyze repository
          bun run repo:analyze <owner> <repo>
          
          # Full orchestration
          bun run repo:orchestrate <owner> <repo> --workflow full
          
          # Use wrapper script
          ./scripts/repo-orchestrator.sh <owner> <repo>
          ```
          
          ## 📊 Monitoring
          
          - Check workflow runs in GitHub Actions
          - Review generated issues for recommendations
          - Download artifacts for detailed analysis
          - Monitor health score trends over time
          
          ## 🔧 Configuration
          
          - Health score threshold: 80 (triggers full orchestration)
          - Schedule: Weekly on Mondays
          - Retention: 30 days for artifacts
          - Labels: Pre-configured for automation
          
          ## 📈 Metrics
          
          Track these key metrics:
          - Repository health score
          - Issues created per orchestration
          - PRs generated
          - Alerts and optimizations identified
          - Time to implement recommendations
          
          ---
          *Generated by Repository Workflow Orchestrator*
          EOF
          
          echo "✅ Workflow documentation created"

      - name: 🔧 Create orchestrator configuration
        run: |
          echo "🔧 Creating orchestrator configuration..."
          
          # Create orchestrator config
          cat > .orchestrator-config.json << 'EOF'
          {
            "repository": {
              "name": "automate_workloads",
              "owner": "emmanuelbarrera",
              "description": "LLM-powered automation ecosystem for repository management"
            },
            "orchestrator": {
              "healthThreshold": 80,
              "schedule": "0 9 * * 1",
              "workflows": {
                "analyze": true,
                "plan": true,
                "execute": true,
                "monitor": true
              },
              "options": {
                "createIssues": true,
                "createPRs": false,
                "autoMerge": false,
                "notifications": true
              }
            },
            "automation": {
              "priorities": [
                "code-quality",
                "documentation",
                "testing",
                "deployment",
                "monitoring"
              ],
              "constraints": [
                "security",
                "performance",
                "maintainability"
              ],
              "goals": [
                "improve-automation",
                "enhance-documentation",
                "optimize-workflows",
                "increase-health-score"
              ]
            },
            "monitoring": {
              "metrics": [
                "health-score",
                "issues-created",
                "prs-created",
                "automation-coverage"
              ],
              "alerts": {
                "healthScoreBelow": 70,
                "noRecentActivity": 30,
                "highIssueCount": 20
              }
            }
          }
          EOF
          
          echo "✅ Orchestrator configuration created"

      - name: 📤 Commit setup changes
        run: |
          echo "📤 Committing setup changes..."
          
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add changes
          git add .
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "✅ No changes to commit"
          else
            # Commit changes
            git commit -m "🤖 Setup repository orchestrator - labels, templates, and config
            
            - Add required labels for automation workflows
            - Create issue templates for automation requests
            - Add workflow documentation
            - Create orchestrator configuration
            - Prepare repository for automated orchestration"
            
            # Push changes
            git push
            echo "✅ Setup changes committed and pushed"
          fi

      - name: 🎉 Setup complete
        run: |
          echo "🎉 Repository orchestrator setup completed!"
          echo ""
          echo "✅ Created labels:"
          echo "   - automation, orchestration, summary"
          echo "   - enhancement, documentation, workflow"
          echo "   - monitoring, optimization, health-check"
          echo "   - llm-powered"
          echo ""
          echo "✅ Created issue templates:"
          echo "   - Automation Request"
          echo "   - Orchestration Summary"
          echo ""
          echo "✅ Created documentation:"
          echo "   - Workflow documentation"
          echo "   - Orchestrator configuration"
          echo ""
          echo "🚀 Repository is now ready for automated orchestration!"
          echo "📅 Next orchestration will run on Monday at 9 AM UTC"
          echo "🔧 Manual orchestration available via workflow dispatch" 